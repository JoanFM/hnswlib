// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jina.proto

#include "jina.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DenseNdArrayProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_DocumentProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DocumentProto_EvaluationsEntry_DoNotUse_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DocumentProto_ScoresEntry_DoNotUse_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_EnvelopeProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EnvelopeProto_CompressConfigProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnvelopeProto_VersionProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GraphProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HeaderProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NamedScoreProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_NdArrayProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_RequestProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestProto_ControlRequestProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestProto_DataRequestProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RouteProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RoutingEdgeProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RoutingTableProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RoutingTableProto_PodsEntry_DoNotUse_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SparseNdArrayProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatusProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatusProto_ExceptionProto_jina_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_jina_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TargetPodProto_jina_2eproto;
namespace jina {
class DenseNdArrayProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DenseNdArrayProto> _instance;
} _DenseNdArrayProto_default_instance_;
class NdArrayProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NdArrayProto> _instance;
  const ::jina::DenseNdArrayProto* dense_;
  const ::jina::SparseNdArrayProto* sparse_;
} _NdArrayProto_default_instance_;
class SparseNdArrayProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SparseNdArrayProto> _instance;
} _SparseNdArrayProto_default_instance_;
class NamedScoreProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NamedScoreProto> _instance;
} _NamedScoreProto_default_instance_;
class GraphProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GraphProto> _instance;
} _GraphProto_default_instance_;
class DocumentProto_ScoresEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DocumentProto_ScoresEntry_DoNotUse> _instance;
} _DocumentProto_ScoresEntry_DoNotUse_default_instance_;
class DocumentProto_EvaluationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DocumentProto_EvaluationsEntry_DoNotUse> _instance;
} _DocumentProto_EvaluationsEntry_DoNotUse_default_instance_;
class DocumentProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DocumentProto> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buffer_;
  const ::jina::NdArrayProto* blob_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  const ::jina::GraphProto* graph_;
} _DocumentProto_default_instance_;
class RouteProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RouteProto> _instance;
} _RouteProto_default_instance_;
class TargetPodProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TargetPodProto> _instance;
} _TargetPodProto_default_instance_;
class RoutingEdgeProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RoutingEdgeProto> _instance;
} _RoutingEdgeProto_default_instance_;
class RoutingTableProto_PodsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RoutingTableProto_PodsEntry_DoNotUse> _instance;
} _RoutingTableProto_PodsEntry_DoNotUse_default_instance_;
class RoutingTableProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RoutingTableProto> _instance;
} _RoutingTableProto_default_instance_;
class EnvelopeProto_VersionProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnvelopeProto_VersionProto> _instance;
} _EnvelopeProto_VersionProto_default_instance_;
class EnvelopeProto_CompressConfigProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnvelopeProto_CompressConfigProto> _instance;
} _EnvelopeProto_CompressConfigProto_default_instance_;
class EnvelopeProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnvelopeProto> _instance;
} _EnvelopeProto_default_instance_;
class HeaderProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HeaderProto> _instance;
} _HeaderProto_default_instance_;
class StatusProto_ExceptionProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatusProto_ExceptionProto> _instance;
} _StatusProto_ExceptionProto_default_instance_;
class StatusProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatusProto> _instance;
} _StatusProto_default_instance_;
class MessageProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageProto> _instance;
} _MessageProto_default_instance_;
class DocumentArrayProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DocumentArrayProto> _instance;
} _DocumentArrayProto_default_instance_;
class RequestProto_DataRequestProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestProto_DataRequestProto> _instance;
} _RequestProto_DataRequestProto_default_instance_;
class RequestProto_ControlRequestProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestProto_ControlRequestProto> _instance;
} _RequestProto_ControlRequestProto_default_instance_;
class RequestProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestProto> _instance;
  const ::jina::RequestProto_ControlRequestProto* control_;
  const ::jina::RequestProto_DataRequestProto* data_;
} _RequestProto_default_instance_;
}  // namespace jina
static void InitDefaultsscc_info_DenseNdArrayProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_DenseNdArrayProto_default_instance_;
    new (ptr) ::jina::DenseNdArrayProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::DenseNdArrayProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DenseNdArrayProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DenseNdArrayProto_jina_2eproto}, {}};

static void InitDefaultsscc_info_DocumentArrayProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_DocumentArrayProto_default_instance_;
    new (ptr) ::jina::DocumentArrayProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::DocumentArrayProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DocumentArrayProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DocumentArrayProto_jina_2eproto}, {
      &scc_info_DocumentProto_jina_2eproto.base,}};

static void InitDefaultsscc_info_DocumentProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_DocumentProto_default_instance_;
    new (ptr) ::jina::DocumentProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::DocumentProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_DocumentProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_DocumentProto_jina_2eproto}, {
      &scc_info_NdArrayProto_jina_2eproto.base,
      &scc_info_GraphProto_jina_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_DocumentProto_ScoresEntry_DoNotUse_jina_2eproto.base,
      &scc_info_DocumentProto_EvaluationsEntry_DoNotUse_jina_2eproto.base,}};

static void InitDefaultsscc_info_DocumentProto_EvaluationsEntry_DoNotUse_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_DocumentProto_EvaluationsEntry_DoNotUse_default_instance_;
    new (ptr) ::jina::DocumentProto_EvaluationsEntry_DoNotUse();
  }
  ::jina::DocumentProto_EvaluationsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DocumentProto_EvaluationsEntry_DoNotUse_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DocumentProto_EvaluationsEntry_DoNotUse_jina_2eproto}, {
      &scc_info_NamedScoreProto_jina_2eproto.base,}};

static void InitDefaultsscc_info_DocumentProto_ScoresEntry_DoNotUse_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_DocumentProto_ScoresEntry_DoNotUse_default_instance_;
    new (ptr) ::jina::DocumentProto_ScoresEntry_DoNotUse();
  }
  ::jina::DocumentProto_ScoresEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DocumentProto_ScoresEntry_DoNotUse_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DocumentProto_ScoresEntry_DoNotUse_jina_2eproto}, {
      &scc_info_NamedScoreProto_jina_2eproto.base,}};

static void InitDefaultsscc_info_EnvelopeProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_EnvelopeProto_default_instance_;
    new (ptr) ::jina::EnvelopeProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::EnvelopeProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_EnvelopeProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_EnvelopeProto_jina_2eproto}, {
      &scc_info_EnvelopeProto_VersionProto_jina_2eproto.base,
      &scc_info_EnvelopeProto_CompressConfigProto_jina_2eproto.base,
      &scc_info_RouteProto_jina_2eproto.base,
      &scc_info_RoutingTableProto_jina_2eproto.base,
      &scc_info_StatusProto_jina_2eproto.base,
      &scc_info_HeaderProto_jina_2eproto.base,}};

static void InitDefaultsscc_info_EnvelopeProto_CompressConfigProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_EnvelopeProto_CompressConfigProto_default_instance_;
    new (ptr) ::jina::EnvelopeProto_CompressConfigProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::EnvelopeProto_CompressConfigProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EnvelopeProto_CompressConfigProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EnvelopeProto_CompressConfigProto_jina_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_EnvelopeProto_VersionProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_EnvelopeProto_VersionProto_default_instance_;
    new (ptr) ::jina::EnvelopeProto_VersionProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::EnvelopeProto_VersionProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnvelopeProto_VersionProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EnvelopeProto_VersionProto_jina_2eproto}, {}};

static void InitDefaultsscc_info_GraphProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_GraphProto_default_instance_;
    new (ptr) ::jina::GraphProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::GraphProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GraphProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GraphProto_jina_2eproto}, {
      &scc_info_NdArrayProto_jina_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_HeaderProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_HeaderProto_default_instance_;
    new (ptr) ::jina::HeaderProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::HeaderProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HeaderProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HeaderProto_jina_2eproto}, {}};

static void InitDefaultsscc_info_MessageProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_MessageProto_default_instance_;
    new (ptr) ::jina::MessageProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::MessageProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MessageProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_MessageProto_jina_2eproto}, {
      &scc_info_EnvelopeProto_jina_2eproto.base,
      &scc_info_RequestProto_jina_2eproto.base,}};

static void InitDefaultsscc_info_NamedScoreProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_NamedScoreProto_default_instance_;
    new (ptr) ::jina::NamedScoreProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::NamedScoreProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NamedScoreProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NamedScoreProto_jina_2eproto}, {}};

static void InitDefaultsscc_info_NdArrayProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_NdArrayProto_default_instance_;
    new (ptr) ::jina::NdArrayProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::NdArrayProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_NdArrayProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_NdArrayProto_jina_2eproto}, {
      &scc_info_DenseNdArrayProto_jina_2eproto.base,
      &scc_info_SparseNdArrayProto_jina_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_RequestProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_RequestProto_default_instance_;
    new (ptr) ::jina::RequestProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::RequestProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_RequestProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_RequestProto_jina_2eproto}, {
      &scc_info_RequestProto_ControlRequestProto_jina_2eproto.base,
      &scc_info_RequestProto_DataRequestProto_jina_2eproto.base,
      &scc_info_HeaderProto_jina_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_RouteProto_jina_2eproto.base,
      &scc_info_StatusProto_jina_2eproto.base,}};

static void InitDefaultsscc_info_RequestProto_ControlRequestProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_RequestProto_ControlRequestProto_default_instance_;
    new (ptr) ::jina::RequestProto_ControlRequestProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::RequestProto_ControlRequestProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestProto_ControlRequestProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RequestProto_ControlRequestProto_jina_2eproto}, {}};

static void InitDefaultsscc_info_RequestProto_DataRequestProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_RequestProto_DataRequestProto_default_instance_;
    new (ptr) ::jina::RequestProto_DataRequestProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::RequestProto_DataRequestProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestProto_DataRequestProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RequestProto_DataRequestProto_jina_2eproto}, {
      &scc_info_DocumentProto_jina_2eproto.base,}};

static void InitDefaultsscc_info_RouteProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_RouteProto_default_instance_;
    new (ptr) ::jina::RouteProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::RouteProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RouteProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_RouteProto_jina_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_StatusProto_jina_2eproto.base,}};

static void InitDefaultsscc_info_RoutingEdgeProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_RoutingEdgeProto_default_instance_;
    new (ptr) ::jina::RoutingEdgeProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::RoutingEdgeProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RoutingEdgeProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RoutingEdgeProto_jina_2eproto}, {}};

static void InitDefaultsscc_info_RoutingTableProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_RoutingTableProto_default_instance_;
    new (ptr) ::jina::RoutingTableProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::RoutingTableProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RoutingTableProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RoutingTableProto_jina_2eproto}, {
      &scc_info_RoutingTableProto_PodsEntry_DoNotUse_jina_2eproto.base,}};

static void InitDefaultsscc_info_RoutingTableProto_PodsEntry_DoNotUse_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_RoutingTableProto_PodsEntry_DoNotUse_default_instance_;
    new (ptr) ::jina::RoutingTableProto_PodsEntry_DoNotUse();
  }
  ::jina::RoutingTableProto_PodsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RoutingTableProto_PodsEntry_DoNotUse_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RoutingTableProto_PodsEntry_DoNotUse_jina_2eproto}, {
      &scc_info_TargetPodProto_jina_2eproto.base,}};

static void InitDefaultsscc_info_SparseNdArrayProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_SparseNdArrayProto_default_instance_;
    new (ptr) ::jina::SparseNdArrayProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::SparseNdArrayProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SparseNdArrayProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SparseNdArrayProto_jina_2eproto}, {
      &scc_info_DenseNdArrayProto_jina_2eproto.base,}};

static void InitDefaultsscc_info_StatusProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_StatusProto_default_instance_;
    new (ptr) ::jina::StatusProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::StatusProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatusProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StatusProto_jina_2eproto}, {
      &scc_info_StatusProto_ExceptionProto_jina_2eproto.base,}};

static void InitDefaultsscc_info_StatusProto_ExceptionProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_StatusProto_ExceptionProto_default_instance_;
    new (ptr) ::jina::StatusProto_ExceptionProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::StatusProto_ExceptionProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatusProto_ExceptionProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StatusProto_ExceptionProto_jina_2eproto}, {}};

static void InitDefaultsscc_info_TargetPodProto_jina_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jina::_TargetPodProto_default_instance_;
    new (ptr) ::jina::TargetPodProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jina::TargetPodProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TargetPodProto_jina_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TargetPodProto_jina_2eproto}, {
      &scc_info_RoutingEdgeProto_jina_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_jina_2eproto[24];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_jina_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_jina_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_jina_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::DenseNdArrayProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::DenseNdArrayProto, buffer_),
  PROTOBUF_FIELD_OFFSET(::jina::DenseNdArrayProto, shape_),
  PROTOBUF_FIELD_OFFSET(::jina::DenseNdArrayProto, dtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::NdArrayProto, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::jina::NdArrayProto, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::jina::NdArrayProtoDefaultTypeInternal, dense_),
  offsetof(::jina::NdArrayProtoDefaultTypeInternal, sparse_),
  PROTOBUF_FIELD_OFFSET(::jina::NdArrayProto, cls_name_),
  PROTOBUF_FIELD_OFFSET(::jina::NdArrayProto, parameters_),
  PROTOBUF_FIELD_OFFSET(::jina::NdArrayProto, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::SparseNdArrayProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::SparseNdArrayProto, indices_),
  PROTOBUF_FIELD_OFFSET(::jina::SparseNdArrayProto, values_),
  PROTOBUF_FIELD_OFFSET(::jina::SparseNdArrayProto, shape_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::NamedScoreProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::NamedScoreProto, value_),
  PROTOBUF_FIELD_OFFSET(::jina::NamedScoreProto, op_name_),
  PROTOBUF_FIELD_OFFSET(::jina::NamedScoreProto, description_),
  PROTOBUF_FIELD_OFFSET(::jina::NamedScoreProto, operands_),
  PROTOBUF_FIELD_OFFSET(::jina::NamedScoreProto, ref_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::GraphProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::GraphProto, adjacency_),
  PROTOBUF_FIELD_OFFSET(::jina::GraphProto, edge_features_),
  PROTOBUF_FIELD_OFFSET(::jina::GraphProto, undirected_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto_ScoresEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto_ScoresEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto_ScoresEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto_ScoresEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto_EvaluationsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto_EvaluationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto_EvaluationsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto_EvaluationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, id_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, granularity_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, adjacency_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, parent_id_),
  offsetof(::jina::DocumentProtoDefaultTypeInternal, buffer_),
  offsetof(::jina::DocumentProtoDefaultTypeInternal, blob_),
  offsetof(::jina::DocumentProtoDefaultTypeInternal, text_),
  offsetof(::jina::DocumentProtoDefaultTypeInternal, graph_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, chunks_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, weight_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, matches_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, uri_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, mime_type_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, tags_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, location_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, offset_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, embedding_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, scores_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, modality_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, evaluations_),
  PROTOBUF_FIELD_OFFSET(::jina::DocumentProto, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::RouteProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::RouteProto, pod_),
  PROTOBUF_FIELD_OFFSET(::jina::RouteProto, pod_id_),
  PROTOBUF_FIELD_OFFSET(::jina::RouteProto, start_time_),
  PROTOBUF_FIELD_OFFSET(::jina::RouteProto, end_time_),
  PROTOBUF_FIELD_OFFSET(::jina::RouteProto, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::TargetPodProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::TargetPodProto, host_),
  PROTOBUF_FIELD_OFFSET(::jina::TargetPodProto, port_),
  PROTOBUF_FIELD_OFFSET(::jina::TargetPodProto, port_out_),
  PROTOBUF_FIELD_OFFSET(::jina::TargetPodProto, expected_parts_),
  PROTOBUF_FIELD_OFFSET(::jina::TargetPodProto, out_edges_),
  PROTOBUF_FIELD_OFFSET(::jina::TargetPodProto, target_identity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::RoutingEdgeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::RoutingEdgeProto, pod_),
  PROTOBUF_FIELD_OFFSET(::jina::RoutingEdgeProto, send_as_bind_),
  PROTOBUF_FIELD_OFFSET(::jina::RoutingTableProto_PodsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::jina::RoutingTableProto_PodsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::RoutingTableProto_PodsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::jina::RoutingTableProto_PodsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::RoutingTableProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::RoutingTableProto, pods_),
  PROTOBUF_FIELD_OFFSET(::jina::RoutingTableProto, active_pod_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto_VersionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto_VersionProto, jina_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto_VersionProto, proto_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto_VersionProto, vcs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto_CompressConfigProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto_CompressConfigProto, algorithm_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto_CompressConfigProto, min_bytes_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto_CompressConfigProto, min_ratio_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto_CompressConfigProto, parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, sender_id_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, receiver_id_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, request_id_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, timeout_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, version_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, request_type_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, check_version_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, compression_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, routes_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, routing_table_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, status_),
  PROTOBUF_FIELD_OFFSET(::jina::EnvelopeProto, header_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::HeaderProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::HeaderProto, exec_endpoint_),
  PROTOBUF_FIELD_OFFSET(::jina::HeaderProto, target_peapod_),
  PROTOBUF_FIELD_OFFSET(::jina::HeaderProto, no_propagate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::StatusProto_ExceptionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::StatusProto_ExceptionProto, name_),
  PROTOBUF_FIELD_OFFSET(::jina::StatusProto_ExceptionProto, args_),
  PROTOBUF_FIELD_OFFSET(::jina::StatusProto_ExceptionProto, stacks_),
  PROTOBUF_FIELD_OFFSET(::jina::StatusProto_ExceptionProto, executor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::StatusProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::StatusProto, code_),
  PROTOBUF_FIELD_OFFSET(::jina::StatusProto, description_),
  PROTOBUF_FIELD_OFFSET(::jina::StatusProto, exception_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::MessageProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::MessageProto, envelope_),
  PROTOBUF_FIELD_OFFSET(::jina::MessageProto, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::DocumentArrayProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::DocumentArrayProto, docs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto_DataRequestProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto_DataRequestProto, docs_),
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto_DataRequestProto, groundtruths_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto_ControlRequestProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto_ControlRequestProto, command_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto, request_id_),
  offsetof(::jina::RequestProtoDefaultTypeInternal, control_),
  offsetof(::jina::RequestProtoDefaultTypeInternal, data_),
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto, header_),
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto, parameters_),
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto, routes_),
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto, status_),
  PROTOBUF_FIELD_OFFSET(::jina::RequestProto, body_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::jina::DenseNdArrayProto)},
  { 8, -1, sizeof(::jina::NdArrayProto)},
  { 18, -1, sizeof(::jina::SparseNdArrayProto)},
  { 26, -1, sizeof(::jina::NamedScoreProto)},
  { 36, -1, sizeof(::jina::GraphProto)},
  { 44, 51, sizeof(::jina::DocumentProto_ScoresEntry_DoNotUse)},
  { 53, 60, sizeof(::jina::DocumentProto_EvaluationsEntry_DoNotUse)},
  { 62, -1, sizeof(::jina::DocumentProto)},
  { 88, -1, sizeof(::jina::RouteProto)},
  { 98, -1, sizeof(::jina::TargetPodProto)},
  { 109, -1, sizeof(::jina::RoutingEdgeProto)},
  { 116, 123, sizeof(::jina::RoutingTableProto_PodsEntry_DoNotUse)},
  { 125, -1, sizeof(::jina::RoutingTableProto)},
  { 132, -1, sizeof(::jina::EnvelopeProto_VersionProto)},
  { 140, -1, sizeof(::jina::EnvelopeProto_CompressConfigProto)},
  { 149, -1, sizeof(::jina::EnvelopeProto)},
  { 166, -1, sizeof(::jina::HeaderProto)},
  { 174, -1, sizeof(::jina::StatusProto_ExceptionProto)},
  { 183, -1, sizeof(::jina::StatusProto)},
  { 191, -1, sizeof(::jina::MessageProto)},
  { 198, -1, sizeof(::jina::DocumentArrayProto)},
  { 204, -1, sizeof(::jina::RequestProto_DataRequestProto)},
  { 211, -1, sizeof(::jina::RequestProto_ControlRequestProto)},
  { 217, -1, sizeof(::jina::RequestProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_DenseNdArrayProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_NdArrayProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_SparseNdArrayProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_NamedScoreProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_GraphProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_DocumentProto_ScoresEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_DocumentProto_EvaluationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_DocumentProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_RouteProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_TargetPodProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_RoutingEdgeProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_RoutingTableProto_PodsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_RoutingTableProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_EnvelopeProto_VersionProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_EnvelopeProto_CompressConfigProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_EnvelopeProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_HeaderProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_StatusProto_ExceptionProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_StatusProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_MessageProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_DocumentArrayProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_RequestProto_DataRequestProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_RequestProto_ControlRequestProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jina::_RequestProto_default_instance_),
};

const char descriptor_table_protodef_jina_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\njina.proto\022\004jina\032\037google/protobuf/time"
  "stamp.proto\032\034google/protobuf/struct.prot"
  "o\032\033google/protobuf/empty.proto\"A\n\021DenseN"
  "dArrayProto\022\016\n\006buffer\030\001 \001(\014\022\r\n\005shape\030\002 \003"
  "(\r\022\r\n\005dtype\030\003 \001(\t\"\256\001\n\014NdArrayProto\022(\n\005de"
  "nse\030\001 \001(\0132\027.jina.DenseNdArrayProtoH\000\022*\n\006"
  "sparse\030\002 \001(\0132\030.jina.SparseNdArrayProtoH\000"
  "\022\020\n\010cls_name\030\003 \001(\t\022+\n\nparameters\030\004 \001(\0132\027"
  ".google.protobuf.StructB\t\n\007content\"v\n\022Sp"
  "arseNdArrayProto\022(\n\007indices\030\001 \001(\0132\027.jina"
  ".DenseNdArrayProto\022\'\n\006values\030\002 \001(\0132\027.jin"
  "a.DenseNdArrayProto\022\r\n\005shape\030\003 \003(\r\"\177\n\017Na"
  "medScoreProto\022\r\n\005value\030\001 \001(\002\022\017\n\007op_name\030"
  "\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\'\n\010operands\030\004"
  " \003(\0132\025.jina.NamedScoreProto\022\016\n\006ref_id\030\005 "
  "\001(\t\"w\n\nGraphProto\022%\n\tadjacency\030\001 \001(\0132\022.j"
  "ina.NdArrayProto\022.\n\redge_features\030\002 \001(\0132"
  "\027.google.protobuf.Struct\022\022\n\nundirected\030\003"
  " \001(\010\"\304\005\n\rDocumentProto\022\n\n\002id\030\001 \001(\t\022\023\n\013gr"
  "anularity\030\016 \001(\r\022\021\n\tadjacency\030\026 \001(\r\022\021\n\tpa"
  "rent_id\030\020 \001(\t\022\020\n\006buffer\030\003 \001(\014H\000\022\"\n\004blob\030"
  "\014 \001(\0132\022.jina.NdArrayProtoH\000\022\016\n\004text\030\r \001("
  "\tH\000\022!\n\005graph\030\033 \001(\0132\020.jina.GraphProtoH\000\022#"
  "\n\006chunks\030\004 \003(\0132\023.jina.DocumentProto\022\016\n\006w"
  "eight\030\005 \001(\002\022$\n\007matches\030\010 \003(\0132\023.jina.Docu"
  "mentProto\022\013\n\003uri\030\t \001(\t\022\021\n\tmime_type\030\n \001("
  "\t\022%\n\004tags\030\013 \001(\0132\027.google.protobuf.Struct"
  "\022\020\n\010location\030\021 \003(\002\022\016\n\006offset\030\022 \001(\002\022%\n\tem"
  "bedding\030\023 \001(\0132\022.jina.NdArrayProto\022/\n\006sco"
  "res\030\034 \003(\0132\037.jina.DocumentProto.ScoresEnt"
  "ry\022\020\n\010modality\030\025 \001(\t\0229\n\013evaluations\030\035 \003("
  "\0132$.jina.DocumentProto.EvaluationsEntry\032"
  "D\n\013ScoresEntry\022\013\n\003key\030\001 \001(\t\022$\n\005value\030\002 \001"
  "(\0132\025.jina.NamedScoreProto:\0028\001\032I\n\020Evaluat"
  "ionsEntry\022\013\n\003key\030\001 \001(\t\022$\n\005value\030\002 \001(\0132\025."
  "jina.NamedScoreProto:\0028\001B\t\n\007content\"\252\001\n\n"
  "RouteProto\022\013\n\003pod\030\001 \001(\t\022\016\n\006pod_id\030\002 \001(\t\022"
  ".\n\nstart_time\030\003 \001(\0132\032.google.protobuf.Ti"
  "mestamp\022,\n\010end_time\030\004 \001(\0132\032.google.proto"
  "buf.Timestamp\022!\n\006status\030\005 \001(\0132\021.jina.Sta"
  "tusProto\"\232\001\n\016TargetPodProto\022\014\n\004host\030\001 \001("
  "\t\022\014\n\004port\030\002 \001(\r\022\020\n\010port_out\030\006 \001(\r\022\026\n\016exp"
  "ected_parts\030\003 \001(\r\022)\n\tout_edges\030\004 \003(\0132\026.j"
  "ina.RoutingEdgeProto\022\027\n\017target_identity\030"
  "\005 \001(\t\"5\n\020RoutingEdgeProto\022\013\n\003pod\030\001 \001(\t\022\024"
  "\n\014send_as_bind\030\002 \001(\010\"\233\001\n\021RoutingTablePro"
  "to\022/\n\004pods\030\001 \003(\0132!.jina.RoutingTableProt"
  "o.PodsEntry\022\022\n\nactive_pod\030\002 \001(\t\032A\n\tPodsE"
  "ntry\022\013\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.jina."
  "TargetPodProto:\0028\001\"\311\004\n\rEnvelopeProto\022\021\n\t"
  "sender_id\030\001 \001(\t\022\023\n\013receiver_id\030\002 \001(\t\022\022\n\n"
  "request_id\030\003 \001(\t\022\017\n\007timeout\030\004 \001(\r\0221\n\007ver"
  "sion\030\006 \001(\0132 .jina.EnvelopeProto.VersionP"
  "roto\022\024\n\014request_type\030\007 \001(\t\022\025\n\rcheck_vers"
  "ion\030\010 \001(\010\022<\n\013compression\030\t \001(\0132\'.jina.En"
  "velopeProto.CompressConfigProto\022 \n\006route"
  "s\030\n \003(\0132\020.jina.RouteProto\022.\n\rrouting_tab"
  "le\030\r \001(\0132\027.jina.RoutingTableProto\022!\n\006sta"
  "tus\030\013 \001(\0132\021.jina.StatusProto\022!\n\006header\030\014"
  " \001(\0132\021.jina.HeaderProto\0328\n\014VersionProto\022"
  "\014\n\004jina\030\001 \001(\t\022\r\n\005proto\030\002 \001(\t\022\013\n\003vcs\030\003 \001("
  "\t\032{\n\023CompressConfigProto\022\021\n\talgorithm\030\001 "
  "\001(\t\022\021\n\tmin_bytes\030\002 \001(\004\022\021\n\tmin_ratio\030\003 \001("
  "\002\022+\n\nparameters\030\004 \001(\0132\027.google.protobuf."
  "Struct\"Q\n\013HeaderProto\022\025\n\rexec_endpoint\030\001"
  " \001(\t\022\025\n\rtarget_peapod\030\002 \001(\t\022\024\n\014no_propag"
  "ate\030\003 \001(\010\"\317\002\n\013StatusProto\022*\n\004code\030\001 \001(\0162"
  "\034.jina.StatusProto.StatusCode\022\023\n\013descrip"
  "tion\030\002 \001(\t\0223\n\texception\030\003 \001(\0132 .jina.Sta"
  "tusProto.ExceptionProto\032N\n\016ExceptionProt"
  "o\022\014\n\004name\030\001 \001(\t\022\014\n\004args\030\002 \003(\t\022\016\n\006stacks\030"
  "\003 \003(\t\022\020\n\010executor\030\004 \001(\t\"z\n\nStatusCode\022\013\n"
  "\007SUCCESS\020\000\022\013\n\007PENDING\020\001\022\t\n\005READY\020\002\022\t\n\005ER"
  "ROR\020\003\022\023\n\017ERROR_DUPLICATE\020\004\022\024\n\020ERROR_NOTA"
  "LLOWED\020\005\022\021\n\rERROR_CHAINED\020\006\"Z\n\014MessagePr"
  "oto\022%\n\010envelope\030\001 \001(\0132\023.jina.EnvelopePro"
  "to\022#\n\007request\030\002 \001(\0132\022.jina.RequestProto\""
  "7\n\022DocumentArrayProto\022!\n\004docs\030\001 \003(\0132\023.ji"
  "na.DocumentProto\"\317\004\n\014RequestProto\022\022\n\nreq"
  "uest_id\030\001 \001(\t\0229\n\007control\030\002 \001(\0132&.jina.Re"
  "questProto.ControlRequestProtoH\000\0223\n\004data"
  "\030\003 \001(\0132#.jina.RequestProto.DataRequestPr"
  "otoH\000\022!\n\006header\030\004 \001(\0132\021.jina.HeaderProto"
  "\022+\n\nparameters\030\005 \001(\0132\027.google.protobuf.S"
  "truct\022 \n\006routes\030\006 \003(\0132\020.jina.RouteProto\022"
  "!\n\006status\030\007 \001(\0132\021.jina.StatusProto\032`\n\020Da"
  "taRequestProto\022!\n\004docs\030\001 \003(\0132\023.jina.Docu"
  "mentProto\022)\n\014groundtruths\030\002 \003(\0132\023.jina.D"
  "ocumentProto\032\273\001\n\023ControlRequestProto\022\?\n\007"
  "command\030\001 \001(\0162..jina.RequestProto.Contro"
  "lRequestProto.Command\"c\n\007Command\022\r\n\tTERM"
  "INATE\020\000\022\n\n\006STATUS\020\001\022\010\n\004IDLE\020\002\022\n\n\006CANCEL\020"
  "\003\022\t\n\005SCALE\020\004\022\014\n\010ACTIVATE\020\005\022\016\n\nDEACTIVATE"
  "\020\006B\006\n\004body2\?\n\007JinaRPC\0224\n\004Call\022\022.jina.Req"
  "uestProto\032\022.jina.RequestProto\"\000(\0010\0012J\n\022J"
  "inaDataRequestRPC\0224\n\004Call\022\022.jina.Message"
  "Proto\032\026.google.protobuf.Empty\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_jina_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_jina_2eproto_sccs[24] = {
  &scc_info_DenseNdArrayProto_jina_2eproto.base,
  &scc_info_DocumentArrayProto_jina_2eproto.base,
  &scc_info_DocumentProto_jina_2eproto.base,
  &scc_info_DocumentProto_EvaluationsEntry_DoNotUse_jina_2eproto.base,
  &scc_info_DocumentProto_ScoresEntry_DoNotUse_jina_2eproto.base,
  &scc_info_EnvelopeProto_jina_2eproto.base,
  &scc_info_EnvelopeProto_CompressConfigProto_jina_2eproto.base,
  &scc_info_EnvelopeProto_VersionProto_jina_2eproto.base,
  &scc_info_GraphProto_jina_2eproto.base,
  &scc_info_HeaderProto_jina_2eproto.base,
  &scc_info_MessageProto_jina_2eproto.base,
  &scc_info_NamedScoreProto_jina_2eproto.base,
  &scc_info_NdArrayProto_jina_2eproto.base,
  &scc_info_RequestProto_jina_2eproto.base,
  &scc_info_RequestProto_ControlRequestProto_jina_2eproto.base,
  &scc_info_RequestProto_DataRequestProto_jina_2eproto.base,
  &scc_info_RouteProto_jina_2eproto.base,
  &scc_info_RoutingEdgeProto_jina_2eproto.base,
  &scc_info_RoutingTableProto_jina_2eproto.base,
  &scc_info_RoutingTableProto_PodsEntry_DoNotUse_jina_2eproto.base,
  &scc_info_SparseNdArrayProto_jina_2eproto.base,
  &scc_info_StatusProto_jina_2eproto.base,
  &scc_info_StatusProto_ExceptionProto_jina_2eproto.base,
  &scc_info_TargetPodProto_jina_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_jina_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_jina_2eproto = {
  false, false, descriptor_table_protodef_jina_2eproto, "jina.proto", 3879,
  &descriptor_table_jina_2eproto_once, descriptor_table_jina_2eproto_sccs, descriptor_table_jina_2eproto_deps, 24, 3,
  schemas, file_default_instances, TableStruct_jina_2eproto::offsets,
  file_level_metadata_jina_2eproto, 24, file_level_enum_descriptors_jina_2eproto, file_level_service_descriptors_jina_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_jina_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_jina_2eproto)), true);
namespace jina {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StatusProto_StatusCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_jina_2eproto);
  return file_level_enum_descriptors_jina_2eproto[0];
}
bool StatusProto_StatusCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr StatusProto_StatusCode StatusProto::SUCCESS;
constexpr StatusProto_StatusCode StatusProto::PENDING;
constexpr StatusProto_StatusCode StatusProto::READY;
constexpr StatusProto_StatusCode StatusProto::ERROR;
constexpr StatusProto_StatusCode StatusProto::ERROR_DUPLICATE;
constexpr StatusProto_StatusCode StatusProto::ERROR_NOTALLOWED;
constexpr StatusProto_StatusCode StatusProto::ERROR_CHAINED;
constexpr StatusProto_StatusCode StatusProto::StatusCode_MIN;
constexpr StatusProto_StatusCode StatusProto::StatusCode_MAX;
constexpr int StatusProto::StatusCode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RequestProto_ControlRequestProto_Command_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_jina_2eproto);
  return file_level_enum_descriptors_jina_2eproto[1];
}
bool RequestProto_ControlRequestProto_Command_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr RequestProto_ControlRequestProto_Command RequestProto_ControlRequestProto::TERMINATE;
constexpr RequestProto_ControlRequestProto_Command RequestProto_ControlRequestProto::STATUS;
constexpr RequestProto_ControlRequestProto_Command RequestProto_ControlRequestProto::IDLE;
constexpr RequestProto_ControlRequestProto_Command RequestProto_ControlRequestProto::CANCEL;
constexpr RequestProto_ControlRequestProto_Command RequestProto_ControlRequestProto::SCALE;
constexpr RequestProto_ControlRequestProto_Command RequestProto_ControlRequestProto::ACTIVATE;
constexpr RequestProto_ControlRequestProto_Command RequestProto_ControlRequestProto::DEACTIVATE;
constexpr RequestProto_ControlRequestProto_Command RequestProto_ControlRequestProto::Command_MIN;
constexpr RequestProto_ControlRequestProto_Command RequestProto_ControlRequestProto::Command_MAX;
constexpr int RequestProto_ControlRequestProto::Command_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void DenseNdArrayProto::InitAsDefaultInstance() {
}
class DenseNdArrayProto::_Internal {
 public:
};

DenseNdArrayProto::DenseNdArrayProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  shape_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.DenseNdArrayProto)
}
DenseNdArrayProto::DenseNdArrayProto(const DenseNdArrayProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  buffer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buffer().empty()) {
    buffer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_buffer(),
      GetArena());
  }
  dtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dtype().empty()) {
    dtype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dtype(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:jina.DenseNdArrayProto)
}

void DenseNdArrayProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DenseNdArrayProto_jina_2eproto.base);
  buffer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DenseNdArrayProto::~DenseNdArrayProto() {
  // @@protoc_insertion_point(destructor:jina.DenseNdArrayProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DenseNdArrayProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  buffer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DenseNdArrayProto::ArenaDtor(void* object) {
  DenseNdArrayProto* _this = reinterpret_cast< DenseNdArrayProto* >(object);
  (void)_this;
}
void DenseNdArrayProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DenseNdArrayProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DenseNdArrayProto& DenseNdArrayProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DenseNdArrayProto_jina_2eproto.base);
  return *internal_default_instance();
}


void DenseNdArrayProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.DenseNdArrayProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  buffer_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dtype_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DenseNdArrayProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes buffer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_buffer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 shape = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dtype = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_dtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.DenseNdArrayProto.dtype"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DenseNdArrayProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.DenseNdArrayProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes buffer = 1;
  if (this->buffer().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_buffer(), target);
  }

  // repeated uint32 shape = 2;
  {
    int byte_size = _shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_shape(), byte_size, target);
    }
  }

  // string dtype = 3;
  if (this->dtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dtype().data(), static_cast<int>(this->_internal_dtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.DenseNdArrayProto.dtype");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.DenseNdArrayProto)
  return target;
}

size_t DenseNdArrayProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.DenseNdArrayProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 shape = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bytes buffer = 1;
  if (this->buffer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_buffer());
  }

  // string dtype = 3;
  if (this->dtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DenseNdArrayProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.DenseNdArrayProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DenseNdArrayProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DenseNdArrayProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.DenseNdArrayProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.DenseNdArrayProto)
    MergeFrom(*source);
  }
}

void DenseNdArrayProto::MergeFrom(const DenseNdArrayProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.DenseNdArrayProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  if (from.buffer().size() > 0) {
    _internal_set_buffer(from._internal_buffer());
  }
  if (from.dtype().size() > 0) {
    _internal_set_dtype(from._internal_dtype());
  }
}

void DenseNdArrayProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.DenseNdArrayProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DenseNdArrayProto::CopyFrom(const DenseNdArrayProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.DenseNdArrayProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DenseNdArrayProto::IsInitialized() const {
  return true;
}

void DenseNdArrayProto::InternalSwap(DenseNdArrayProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  shape_.InternalSwap(&other->shape_);
  buffer_.Swap(&other->buffer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dtype_.Swap(&other->dtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DenseNdArrayProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NdArrayProto::InitAsDefaultInstance() {
  ::jina::_NdArrayProto_default_instance_.dense_ = const_cast< ::jina::DenseNdArrayProto*>(
      ::jina::DenseNdArrayProto::internal_default_instance());
  ::jina::_NdArrayProto_default_instance_.sparse_ = const_cast< ::jina::SparseNdArrayProto*>(
      ::jina::SparseNdArrayProto::internal_default_instance());
  ::jina::_NdArrayProto_default_instance_._instance.get_mutable()->parameters_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class NdArrayProto::_Internal {
 public:
  static const ::jina::DenseNdArrayProto& dense(const NdArrayProto* msg);
  static const ::jina::SparseNdArrayProto& sparse(const NdArrayProto* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& parameters(const NdArrayProto* msg);
};

const ::jina::DenseNdArrayProto&
NdArrayProto::_Internal::dense(const NdArrayProto* msg) {
  return *msg->content_.dense_;
}
const ::jina::SparseNdArrayProto&
NdArrayProto::_Internal::sparse(const NdArrayProto* msg) {
  return *msg->content_.sparse_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
NdArrayProto::_Internal::parameters(const NdArrayProto* msg) {
  return *msg->parameters_;
}
void NdArrayProto::set_allocated_dense(::jina::DenseNdArrayProto* dense) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_content();
  if (dense) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dense);
    if (message_arena != submessage_arena) {
      dense = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dense, submessage_arena);
    }
    set_has_dense();
    content_.dense_ = dense;
  }
  // @@protoc_insertion_point(field_set_allocated:jina.NdArrayProto.dense)
}
void NdArrayProto::set_allocated_sparse(::jina::SparseNdArrayProto* sparse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_content();
  if (sparse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sparse);
    if (message_arena != submessage_arena) {
      sparse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sparse, submessage_arena);
    }
    set_has_sparse();
    content_.sparse_ = sparse;
  }
  // @@protoc_insertion_point(field_set_allocated:jina.NdArrayProto.sparse)
}
void NdArrayProto::clear_parameters() {
  if (GetArena() == nullptr && parameters_ != nullptr) {
    delete parameters_;
  }
  parameters_ = nullptr;
}
NdArrayProto::NdArrayProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.NdArrayProto)
}
NdArrayProto::NdArrayProto(const NdArrayProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cls_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cls_name().empty()) {
    cls_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_cls_name(),
      GetArena());
  }
  if (from._internal_has_parameters()) {
    parameters_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.parameters_);
  } else {
    parameters_ = nullptr;
  }
  clear_has_content();
  switch (from.content_case()) {
    case kDense: {
      _internal_mutable_dense()->::jina::DenseNdArrayProto::MergeFrom(from._internal_dense());
      break;
    }
    case kSparse: {
      _internal_mutable_sparse()->::jina::SparseNdArrayProto::MergeFrom(from._internal_sparse());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:jina.NdArrayProto)
}

void NdArrayProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NdArrayProto_jina_2eproto.base);
  cls_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parameters_ = nullptr;
  clear_has_content();
}

NdArrayProto::~NdArrayProto() {
  // @@protoc_insertion_point(destructor:jina.NdArrayProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NdArrayProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cls_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parameters_;
  if (has_content()) {
    clear_content();
  }
}

void NdArrayProto::ArenaDtor(void* object) {
  NdArrayProto* _this = reinterpret_cast< NdArrayProto* >(object);
  (void)_this;
}
void NdArrayProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NdArrayProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NdArrayProto& NdArrayProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NdArrayProto_jina_2eproto.base);
  return *internal_default_instance();
}


void NdArrayProto::clear_content() {
// @@protoc_insertion_point(one_of_clear_start:jina.NdArrayProto)
  switch (content_case()) {
    case kDense: {
      if (GetArena() == nullptr) {
        delete content_.dense_;
      }
      break;
    }
    case kSparse: {
      if (GetArena() == nullptr) {
        delete content_.sparse_;
      }
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTENT_NOT_SET;
}


void NdArrayProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.NdArrayProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cls_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && parameters_ != nullptr) {
    delete parameters_;
  }
  parameters_ = nullptr;
  clear_content();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NdArrayProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .jina.DenseNdArrayProto dense = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dense(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.SparseNdArrayProto sparse = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_sparse(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cls_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_cls_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.NdArrayProto.cls_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_parameters(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NdArrayProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.NdArrayProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jina.DenseNdArrayProto dense = 1;
  if (_internal_has_dense()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::dense(this), target, stream);
  }

  // .jina.SparseNdArrayProto sparse = 2;
  if (_internal_has_sparse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::sparse(this), target, stream);
  }

  // string cls_name = 3;
  if (this->cls_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cls_name().data(), static_cast<int>(this->_internal_cls_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.NdArrayProto.cls_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_cls_name(), target);
  }

  // .google.protobuf.Struct parameters = 4;
  if (this->has_parameters()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::parameters(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.NdArrayProto)
  return target;
}

size_t NdArrayProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.NdArrayProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cls_name = 3;
  if (this->cls_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cls_name());
  }

  // .google.protobuf.Struct parameters = 4;
  if (this->has_parameters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  switch (content_case()) {
    // .jina.DenseNdArrayProto dense = 1;
    case kDense: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *content_.dense_);
      break;
    }
    // .jina.SparseNdArrayProto sparse = 2;
    case kSparse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *content_.sparse_);
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NdArrayProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.NdArrayProto)
  GOOGLE_DCHECK_NE(&from, this);
  const NdArrayProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NdArrayProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.NdArrayProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.NdArrayProto)
    MergeFrom(*source);
  }
}

void NdArrayProto::MergeFrom(const NdArrayProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.NdArrayProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cls_name().size() > 0) {
    _internal_set_cls_name(from._internal_cls_name());
  }
  if (from.has_parameters()) {
    _internal_mutable_parameters()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_parameters());
  }
  switch (from.content_case()) {
    case kDense: {
      _internal_mutable_dense()->::jina::DenseNdArrayProto::MergeFrom(from._internal_dense());
      break;
    }
    case kSparse: {
      _internal_mutable_sparse()->::jina::SparseNdArrayProto::MergeFrom(from._internal_sparse());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
}

void NdArrayProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.NdArrayProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NdArrayProto::CopyFrom(const NdArrayProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.NdArrayProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NdArrayProto::IsInitialized() const {
  return true;
}

void NdArrayProto::InternalSwap(NdArrayProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cls_name_.Swap(&other->cls_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(parameters_, other->parameters_);
  swap(content_, other->content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata NdArrayProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SparseNdArrayProto::InitAsDefaultInstance() {
  ::jina::_SparseNdArrayProto_default_instance_._instance.get_mutable()->indices_ = const_cast< ::jina::DenseNdArrayProto*>(
      ::jina::DenseNdArrayProto::internal_default_instance());
  ::jina::_SparseNdArrayProto_default_instance_._instance.get_mutable()->values_ = const_cast< ::jina::DenseNdArrayProto*>(
      ::jina::DenseNdArrayProto::internal_default_instance());
}
class SparseNdArrayProto::_Internal {
 public:
  static const ::jina::DenseNdArrayProto& indices(const SparseNdArrayProto* msg);
  static const ::jina::DenseNdArrayProto& values(const SparseNdArrayProto* msg);
};

const ::jina::DenseNdArrayProto&
SparseNdArrayProto::_Internal::indices(const SparseNdArrayProto* msg) {
  return *msg->indices_;
}
const ::jina::DenseNdArrayProto&
SparseNdArrayProto::_Internal::values(const SparseNdArrayProto* msg) {
  return *msg->values_;
}
SparseNdArrayProto::SparseNdArrayProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  shape_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.SparseNdArrayProto)
}
SparseNdArrayProto::SparseNdArrayProto(const SparseNdArrayProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_indices()) {
    indices_ = new ::jina::DenseNdArrayProto(*from.indices_);
  } else {
    indices_ = nullptr;
  }
  if (from._internal_has_values()) {
    values_ = new ::jina::DenseNdArrayProto(*from.values_);
  } else {
    values_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:jina.SparseNdArrayProto)
}

void SparseNdArrayProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SparseNdArrayProto_jina_2eproto.base);
  ::memset(&indices_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&values_) -
      reinterpret_cast<char*>(&indices_)) + sizeof(values_));
}

SparseNdArrayProto::~SparseNdArrayProto() {
  // @@protoc_insertion_point(destructor:jina.SparseNdArrayProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SparseNdArrayProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete indices_;
  if (this != internal_default_instance()) delete values_;
}

void SparseNdArrayProto::ArenaDtor(void* object) {
  SparseNdArrayProto* _this = reinterpret_cast< SparseNdArrayProto* >(object);
  (void)_this;
}
void SparseNdArrayProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SparseNdArrayProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SparseNdArrayProto& SparseNdArrayProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SparseNdArrayProto_jina_2eproto.base);
  return *internal_default_instance();
}


void SparseNdArrayProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.SparseNdArrayProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  if (GetArena() == nullptr && indices_ != nullptr) {
    delete indices_;
  }
  indices_ = nullptr;
  if (GetArena() == nullptr && values_ != nullptr) {
    delete values_;
  }
  values_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SparseNdArrayProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .jina.DenseNdArrayProto indices = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_indices(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.DenseNdArrayProto values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_values(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 shape = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SparseNdArrayProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.SparseNdArrayProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jina.DenseNdArrayProto indices = 1;
  if (this->has_indices()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::indices(this), target, stream);
  }

  // .jina.DenseNdArrayProto values = 2;
  if (this->has_values()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::values(this), target, stream);
  }

  // repeated uint32 shape = 3;
  {
    int byte_size = _shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_shape(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.SparseNdArrayProto)
  return target;
}

size_t SparseNdArrayProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.SparseNdArrayProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 shape = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .jina.DenseNdArrayProto indices = 1;
  if (this->has_indices()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *indices_);
  }

  // .jina.DenseNdArrayProto values = 2;
  if (this->has_values()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *values_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SparseNdArrayProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.SparseNdArrayProto)
  GOOGLE_DCHECK_NE(&from, this);
  const SparseNdArrayProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SparseNdArrayProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.SparseNdArrayProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.SparseNdArrayProto)
    MergeFrom(*source);
  }
}

void SparseNdArrayProto::MergeFrom(const SparseNdArrayProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.SparseNdArrayProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  if (from.has_indices()) {
    _internal_mutable_indices()->::jina::DenseNdArrayProto::MergeFrom(from._internal_indices());
  }
  if (from.has_values()) {
    _internal_mutable_values()->::jina::DenseNdArrayProto::MergeFrom(from._internal_values());
  }
}

void SparseNdArrayProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.SparseNdArrayProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SparseNdArrayProto::CopyFrom(const SparseNdArrayProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.SparseNdArrayProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SparseNdArrayProto::IsInitialized() const {
  return true;
}

void SparseNdArrayProto::InternalSwap(SparseNdArrayProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  shape_.InternalSwap(&other->shape_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SparseNdArrayProto, values_)
      + sizeof(SparseNdArrayProto::values_)
      - PROTOBUF_FIELD_OFFSET(SparseNdArrayProto, indices_)>(
          reinterpret_cast<char*>(&indices_),
          reinterpret_cast<char*>(&other->indices_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SparseNdArrayProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NamedScoreProto::InitAsDefaultInstance() {
}
class NamedScoreProto::_Internal {
 public:
};

NamedScoreProto::NamedScoreProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  operands_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.NamedScoreProto)
}
NamedScoreProto::NamedScoreProto(const NamedScoreProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      operands_(from.operands_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  op_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_op_name().empty()) {
    op_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_op_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  ref_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ref_id().empty()) {
    ref_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ref_id(),
      GetArena());
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:jina.NamedScoreProto)
}

void NamedScoreProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NamedScoreProto_jina_2eproto.base);
  op_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ref_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

NamedScoreProto::~NamedScoreProto() {
  // @@protoc_insertion_point(destructor:jina.NamedScoreProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NamedScoreProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  op_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ref_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NamedScoreProto::ArenaDtor(void* object) {
  NamedScoreProto* _this = reinterpret_cast< NamedScoreProto* >(object);
  (void)_this;
}
void NamedScoreProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NamedScoreProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NamedScoreProto& NamedScoreProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NamedScoreProto_jina_2eproto.base);
  return *internal_default_instance();
}


void NamedScoreProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.NamedScoreProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operands_.Clear();
  op_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ref_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NamedScoreProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string op_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_op_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.NamedScoreProto.op_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.NamedScoreProto.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .jina.NamedScoreProto operands = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_operands(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string ref_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_ref_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.NamedScoreProto.ref_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NamedScoreProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.NamedScoreProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value = 1;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_value(), target);
  }

  // string op_name = 2;
  if (this->op_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_op_name().data(), static_cast<int>(this->_internal_op_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.NamedScoreProto.op_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_op_name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.NamedScoreProto.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // repeated .jina.NamedScoreProto operands = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_operands_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_operands(i), target, stream);
  }

  // string ref_id = 5;
  if (this->ref_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ref_id().data(), static_cast<int>(this->_internal_ref_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.NamedScoreProto.ref_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_ref_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.NamedScoreProto)
  return target;
}

size_t NamedScoreProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.NamedScoreProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .jina.NamedScoreProto operands = 4;
  total_size += 1UL * this->_internal_operands_size();
  for (const auto& msg : this->operands_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string op_name = 2;
  if (this->op_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_op_name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string ref_id = 5;
  if (this->ref_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ref_id());
  }

  // float value = 1;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NamedScoreProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.NamedScoreProto)
  GOOGLE_DCHECK_NE(&from, this);
  const NamedScoreProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NamedScoreProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.NamedScoreProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.NamedScoreProto)
    MergeFrom(*source);
  }
}

void NamedScoreProto::MergeFrom(const NamedScoreProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.NamedScoreProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operands_.MergeFrom(from.operands_);
  if (from.op_name().size() > 0) {
    _internal_set_op_name(from._internal_op_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.ref_id().size() > 0) {
    _internal_set_ref_id(from._internal_ref_id());
  }
  if (!(from.value() <= 0 && from.value() >= 0)) {
    _internal_set_value(from._internal_value());
  }
}

void NamedScoreProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.NamedScoreProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NamedScoreProto::CopyFrom(const NamedScoreProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.NamedScoreProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NamedScoreProto::IsInitialized() const {
  return true;
}

void NamedScoreProto::InternalSwap(NamedScoreProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  operands_.InternalSwap(&other->operands_);
  op_name_.Swap(&other->op_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ref_id_.Swap(&other->ref_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NamedScoreProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GraphProto::InitAsDefaultInstance() {
  ::jina::_GraphProto_default_instance_._instance.get_mutable()->adjacency_ = const_cast< ::jina::NdArrayProto*>(
      ::jina::NdArrayProto::internal_default_instance());
  ::jina::_GraphProto_default_instance_._instance.get_mutable()->edge_features_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class GraphProto::_Internal {
 public:
  static const ::jina::NdArrayProto& adjacency(const GraphProto* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& edge_features(const GraphProto* msg);
};

const ::jina::NdArrayProto&
GraphProto::_Internal::adjacency(const GraphProto* msg) {
  return *msg->adjacency_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
GraphProto::_Internal::edge_features(const GraphProto* msg) {
  return *msg->edge_features_;
}
void GraphProto::clear_edge_features() {
  if (GetArena() == nullptr && edge_features_ != nullptr) {
    delete edge_features_;
  }
  edge_features_ = nullptr;
}
GraphProto::GraphProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.GraphProto)
}
GraphProto::GraphProto(const GraphProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_adjacency()) {
    adjacency_ = new ::jina::NdArrayProto(*from.adjacency_);
  } else {
    adjacency_ = nullptr;
  }
  if (from._internal_has_edge_features()) {
    edge_features_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.edge_features_);
  } else {
    edge_features_ = nullptr;
  }
  undirected_ = from.undirected_;
  // @@protoc_insertion_point(copy_constructor:jina.GraphProto)
}

void GraphProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GraphProto_jina_2eproto.base);
  ::memset(&adjacency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&undirected_) -
      reinterpret_cast<char*>(&adjacency_)) + sizeof(undirected_));
}

GraphProto::~GraphProto() {
  // @@protoc_insertion_point(destructor:jina.GraphProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GraphProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete adjacency_;
  if (this != internal_default_instance()) delete edge_features_;
}

void GraphProto::ArenaDtor(void* object) {
  GraphProto* _this = reinterpret_cast< GraphProto* >(object);
  (void)_this;
}
void GraphProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GraphProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GraphProto& GraphProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GraphProto_jina_2eproto.base);
  return *internal_default_instance();
}


void GraphProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.GraphProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && adjacency_ != nullptr) {
    delete adjacency_;
  }
  adjacency_ = nullptr;
  if (GetArena() == nullptr && edge_features_ != nullptr) {
    delete edge_features_;
  }
  edge_features_ = nullptr;
  undirected_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GraphProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .jina.NdArrayProto adjacency = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_adjacency(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct edge_features = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edge_features(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool undirected = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          undirected_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GraphProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.GraphProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jina.NdArrayProto adjacency = 1;
  if (this->has_adjacency()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::adjacency(this), target, stream);
  }

  // .google.protobuf.Struct edge_features = 2;
  if (this->has_edge_features()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::edge_features(this), target, stream);
  }

  // bool undirected = 3;
  if (this->undirected() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_undirected(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.GraphProto)
  return target;
}

size_t GraphProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.GraphProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .jina.NdArrayProto adjacency = 1;
  if (this->has_adjacency()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *adjacency_);
  }

  // .google.protobuf.Struct edge_features = 2;
  if (this->has_edge_features()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *edge_features_);
  }

  // bool undirected = 3;
  if (this->undirected() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.GraphProto)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GraphProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.GraphProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.GraphProto)
    MergeFrom(*source);
  }
}

void GraphProto::MergeFrom(const GraphProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.GraphProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_adjacency()) {
    _internal_mutable_adjacency()->::jina::NdArrayProto::MergeFrom(from._internal_adjacency());
  }
  if (from.has_edge_features()) {
    _internal_mutable_edge_features()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_edge_features());
  }
  if (from.undirected() != 0) {
    _internal_set_undirected(from._internal_undirected());
  }
}

void GraphProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.GraphProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphProto::CopyFrom(const GraphProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.GraphProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphProto::IsInitialized() const {
  return true;
}

void GraphProto::InternalSwap(GraphProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphProto, undirected_)
      + sizeof(GraphProto::undirected_)
      - PROTOBUF_FIELD_OFFSET(GraphProto, adjacency_)>(
          reinterpret_cast<char*>(&adjacency_),
          reinterpret_cast<char*>(&other->adjacency_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GraphProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

DocumentProto_ScoresEntry_DoNotUse::DocumentProto_ScoresEntry_DoNotUse() {}
DocumentProto_ScoresEntry_DoNotUse::DocumentProto_ScoresEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DocumentProto_ScoresEntry_DoNotUse::MergeFrom(const DocumentProto_ScoresEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DocumentProto_ScoresEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DocumentProto_ScoresEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

DocumentProto_EvaluationsEntry_DoNotUse::DocumentProto_EvaluationsEntry_DoNotUse() {}
DocumentProto_EvaluationsEntry_DoNotUse::DocumentProto_EvaluationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DocumentProto_EvaluationsEntry_DoNotUse::MergeFrom(const DocumentProto_EvaluationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DocumentProto_EvaluationsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DocumentProto_EvaluationsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void DocumentProto::InitAsDefaultInstance() {
  ::jina::_DocumentProto_default_instance_.buffer_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::jina::_DocumentProto_default_instance_.blob_ = const_cast< ::jina::NdArrayProto*>(
      ::jina::NdArrayProto::internal_default_instance());
  ::jina::_DocumentProto_default_instance_.text_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::jina::_DocumentProto_default_instance_.graph_ = const_cast< ::jina::GraphProto*>(
      ::jina::GraphProto::internal_default_instance());
  ::jina::_DocumentProto_default_instance_._instance.get_mutable()->tags_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::jina::_DocumentProto_default_instance_._instance.get_mutable()->embedding_ = const_cast< ::jina::NdArrayProto*>(
      ::jina::NdArrayProto::internal_default_instance());
}
class DocumentProto::_Internal {
 public:
  static const ::jina::NdArrayProto& blob(const DocumentProto* msg);
  static const ::jina::GraphProto& graph(const DocumentProto* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& tags(const DocumentProto* msg);
  static const ::jina::NdArrayProto& embedding(const DocumentProto* msg);
};

const ::jina::NdArrayProto&
DocumentProto::_Internal::blob(const DocumentProto* msg) {
  return *msg->content_.blob_;
}
const ::jina::GraphProto&
DocumentProto::_Internal::graph(const DocumentProto* msg) {
  return *msg->content_.graph_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
DocumentProto::_Internal::tags(const DocumentProto* msg) {
  return *msg->tags_;
}
const ::jina::NdArrayProto&
DocumentProto::_Internal::embedding(const DocumentProto* msg) {
  return *msg->embedding_;
}
void DocumentProto::set_allocated_blob(::jina::NdArrayProto* blob) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_content();
  if (blob) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(blob);
    if (message_arena != submessage_arena) {
      blob = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blob, submessage_arena);
    }
    set_has_blob();
    content_.blob_ = blob;
  }
  // @@protoc_insertion_point(field_set_allocated:jina.DocumentProto.blob)
}
void DocumentProto::set_allocated_graph(::jina::GraphProto* graph) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_content();
  if (graph) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(graph);
    if (message_arena != submessage_arena) {
      graph = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, graph, submessage_arena);
    }
    set_has_graph();
    content_.graph_ = graph;
  }
  // @@protoc_insertion_point(field_set_allocated:jina.DocumentProto.graph)
}
void DocumentProto::clear_tags() {
  if (GetArena() == nullptr && tags_ != nullptr) {
    delete tags_;
  }
  tags_ = nullptr;
}
DocumentProto::DocumentProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  chunks_(arena),
  matches_(arena),
  location_(arena),
  scores_(arena),
  evaluations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.DocumentProto)
}
DocumentProto::DocumentProto(const DocumentProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      chunks_(from.chunks_),
      matches_(from.matches_),
      location_(from.location_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  scores_.MergeFrom(from.scores_);
  evaluations_.MergeFrom(from.evaluations_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uri().empty()) {
    uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_uri(),
      GetArena());
  }
  mime_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mime_type().empty()) {
    mime_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mime_type(),
      GetArena());
  }
  parent_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parent_id().empty()) {
    parent_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_parent_id(),
      GetArena());
  }
  modality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_modality().empty()) {
    modality_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_modality(),
      GetArena());
  }
  if (from._internal_has_tags()) {
    tags_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.tags_);
  } else {
    tags_ = nullptr;
  }
  if (from._internal_has_embedding()) {
    embedding_ = new ::jina::NdArrayProto(*from.embedding_);
  } else {
    embedding_ = nullptr;
  }
  ::memcpy(&weight_, &from.weight_,
    static_cast<size_t>(reinterpret_cast<char*>(&adjacency_) -
    reinterpret_cast<char*>(&weight_)) + sizeof(adjacency_));
  clear_has_content();
  switch (from.content_case()) {
    case kBuffer: {
      _internal_set_buffer(from._internal_buffer());
      break;
    }
    case kBlob: {
      _internal_mutable_blob()->::jina::NdArrayProto::MergeFrom(from._internal_blob());
      break;
    }
    case kText: {
      _internal_set_text(from._internal_text());
      break;
    }
    case kGraph: {
      _internal_mutable_graph()->::jina::GraphProto::MergeFrom(from._internal_graph());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:jina.DocumentProto)
}

void DocumentProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DocumentProto_jina_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parent_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&tags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adjacency_) -
      reinterpret_cast<char*>(&tags_)) + sizeof(adjacency_));
  clear_has_content();
}

DocumentProto::~DocumentProto() {
  // @@protoc_insertion_point(destructor:jina.DocumentProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DocumentProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parent_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modality_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tags_;
  if (this != internal_default_instance()) delete embedding_;
  if (has_content()) {
    clear_content();
  }
}

void DocumentProto::ArenaDtor(void* object) {
  DocumentProto* _this = reinterpret_cast< DocumentProto* >(object);
  (void)_this;
}
void DocumentProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DocumentProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DocumentProto& DocumentProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DocumentProto_jina_2eproto.base);
  return *internal_default_instance();
}


void DocumentProto::clear_content() {
// @@protoc_insertion_point(one_of_clear_start:jina.DocumentProto)
  switch (content_case()) {
    case kBuffer: {
      content_.buffer_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kBlob: {
      if (GetArena() == nullptr) {
        delete content_.blob_;
      }
      break;
    }
    case kText: {
      content_.text_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kGraph: {
      if (GetArena() == nullptr) {
        delete content_.graph_;
      }
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTENT_NOT_SET;
}


void DocumentProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.DocumentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunks_.Clear();
  matches_.Clear();
  location_.Clear();
  scores_.Clear();
  evaluations_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mime_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  parent_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  modality_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && tags_ != nullptr) {
    delete tags_;
  }
  tags_ = nullptr;
  if (GetArena() == nullptr && embedding_ != nullptr) {
    delete embedding_;
  }
  embedding_ = nullptr;
  ::memset(&weight_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adjacency_) -
      reinterpret_cast<char*>(&weight_)) + sizeof(adjacency_));
  clear_content();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DocumentProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.DocumentProto.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes buffer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_buffer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .jina.DocumentProto chunks = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_chunks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // float weight = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          weight_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated .jina.DocumentProto matches = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_matches(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // string uri = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.DocumentProto.uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mime_type = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_mime_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.DocumentProto.mime_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct tags = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_tags(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.NdArrayProto blob = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_blob(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string text = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.DocumentProto.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 granularity = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          granularity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string parent_id = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_parent_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.DocumentProto.parent_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated float location = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_location(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 141) {
          _internal_add_location(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float offset = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 149)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // .jina.NdArrayProto embedding = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_embedding(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string modality = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          auto str = _internal_mutable_modality();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.DocumentProto.modality"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 adjacency = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          adjacency_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.GraphProto graph = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_graph(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .jina.NamedScoreProto> scores = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&scores_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<226>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, .jina.NamedScoreProto> evaluations = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&evaluations_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<234>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DocumentProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.DocumentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.DocumentProto.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bytes buffer = 3;
  if (_internal_has_buffer()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_buffer(), target);
  }

  // repeated .jina.DocumentProto chunks = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_chunks_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_chunks(i), target, stream);
  }

  // float weight = 5;
  if (!(this->weight() <= 0 && this->weight() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_weight(), target);
  }

  // repeated .jina.DocumentProto matches = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_matches_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_matches(i), target, stream);
  }

  // string uri = 9;
  if (this->uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.DocumentProto.uri");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_uri(), target);
  }

  // string mime_type = 10;
  if (this->mime_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mime_type().data(), static_cast<int>(this->_internal_mime_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.DocumentProto.mime_type");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_mime_type(), target);
  }

  // .google.protobuf.Struct tags = 11;
  if (this->has_tags()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::tags(this), target, stream);
  }

  // .jina.NdArrayProto blob = 12;
  if (_internal_has_blob()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::blob(this), target, stream);
  }

  // string text = 13;
  if (_internal_has_text()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.DocumentProto.text");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_text(), target);
  }

  // uint32 granularity = 14;
  if (this->granularity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_granularity(), target);
  }

  // string parent_id = 16;
  if (this->parent_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_id().data(), static_cast<int>(this->_internal_parent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.DocumentProto.parent_id");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_parent_id(), target);
  }

  // repeated float location = 17;
  if (this->_internal_location_size() > 0) {
    target = stream->WriteFixedPacked(17, _internal_location(), target);
  }

  // float offset = 18;
  if (!(this->offset() <= 0 && this->offset() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(18, this->_internal_offset(), target);
  }

  // .jina.NdArrayProto embedding = 19;
  if (this->has_embedding()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::embedding(this), target, stream);
  }

  // string modality = 21;
  if (this->modality().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modality().data(), static_cast<int>(this->_internal_modality().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.DocumentProto.modality");
    target = stream->WriteStringMaybeAliased(
        21, this->_internal_modality(), target);
  }

  // uint32 adjacency = 22;
  if (this->adjacency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(22, this->_internal_adjacency(), target);
  }

  // .jina.GraphProto graph = 27;
  if (_internal_has_graph()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        27, _Internal::graph(this), target, stream);
  }

  // map<string, .jina.NamedScoreProto> scores = 28;
  if (!this->_internal_scores().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::NamedScoreProto >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "jina.DocumentProto.ScoresEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_scores().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_scores().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::NamedScoreProto >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::NamedScoreProto >::const_iterator
          it = this->_internal_scores().begin();
          it != this->_internal_scores().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DocumentProto_ScoresEntry_DoNotUse::Funcs::InternalSerialize(28, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::NamedScoreProto >::const_iterator
          it = this->_internal_scores().begin();
          it != this->_internal_scores().end(); ++it) {
        target = DocumentProto_ScoresEntry_DoNotUse::Funcs::InternalSerialize(28, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, .jina.NamedScoreProto> evaluations = 29;
  if (!this->_internal_evaluations().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::NamedScoreProto >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "jina.DocumentProto.EvaluationsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_evaluations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_evaluations().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::NamedScoreProto >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::NamedScoreProto >::const_iterator
          it = this->_internal_evaluations().begin();
          it != this->_internal_evaluations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DocumentProto_EvaluationsEntry_DoNotUse::Funcs::InternalSerialize(29, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::NamedScoreProto >::const_iterator
          it = this->_internal_evaluations().begin();
          it != this->_internal_evaluations().end(); ++it) {
        target = DocumentProto_EvaluationsEntry_DoNotUse::Funcs::InternalSerialize(29, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.DocumentProto)
  return target;
}

size_t DocumentProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.DocumentProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .jina.DocumentProto chunks = 4;
  total_size += 1UL * this->_internal_chunks_size();
  for (const auto& msg : this->chunks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .jina.DocumentProto matches = 8;
  total_size += 1UL * this->_internal_matches_size();
  for (const auto& msg : this->matches_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated float location = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_location_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _location_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<string, .jina.NamedScoreProto> scores = 28;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_scores_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::NamedScoreProto >::const_iterator
      it = this->_internal_scores().begin();
      it != this->_internal_scores().end(); ++it) {
    total_size += DocumentProto_ScoresEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .jina.NamedScoreProto> evaluations = 29;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_evaluations_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::NamedScoreProto >::const_iterator
      it = this->_internal_evaluations().begin();
      it != this->_internal_evaluations().end(); ++it) {
    total_size += DocumentProto_EvaluationsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string uri = 9;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // string mime_type = 10;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mime_type());
  }

  // string parent_id = 16;
  if (this->parent_id().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_id());
  }

  // string modality = 21;
  if (this->modality().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modality());
  }

  // .google.protobuf.Struct tags = 11;
  if (this->has_tags()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tags_);
  }

  // .jina.NdArrayProto embedding = 19;
  if (this->has_embedding()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *embedding_);
  }

  // float weight = 5;
  if (!(this->weight() <= 0 && this->weight() >= 0)) {
    total_size += 1 + 4;
  }

  // uint32 granularity = 14;
  if (this->granularity() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_granularity());
  }

  // float offset = 18;
  if (!(this->offset() <= 0 && this->offset() >= 0)) {
    total_size += 2 + 4;
  }

  // uint32 adjacency = 22;
  if (this->adjacency() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_adjacency());
  }

  switch (content_case()) {
    // bytes buffer = 3;
    case kBuffer: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_buffer());
      break;
    }
    // .jina.NdArrayProto blob = 12;
    case kBlob: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *content_.blob_);
      break;
    }
    // string text = 13;
    case kText: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_text());
      break;
    }
    // .jina.GraphProto graph = 27;
    case kGraph: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *content_.graph_);
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DocumentProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.DocumentProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DocumentProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DocumentProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.DocumentProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.DocumentProto)
    MergeFrom(*source);
  }
}

void DocumentProto::MergeFrom(const DocumentProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.DocumentProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chunks_.MergeFrom(from.chunks_);
  matches_.MergeFrom(from.matches_);
  location_.MergeFrom(from.location_);
  scores_.MergeFrom(from.scores_);
  evaluations_.MergeFrom(from.evaluations_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.uri().size() > 0) {
    _internal_set_uri(from._internal_uri());
  }
  if (from.mime_type().size() > 0) {
    _internal_set_mime_type(from._internal_mime_type());
  }
  if (from.parent_id().size() > 0) {
    _internal_set_parent_id(from._internal_parent_id());
  }
  if (from.modality().size() > 0) {
    _internal_set_modality(from._internal_modality());
  }
  if (from.has_tags()) {
    _internal_mutable_tags()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_tags());
  }
  if (from.has_embedding()) {
    _internal_mutable_embedding()->::jina::NdArrayProto::MergeFrom(from._internal_embedding());
  }
  if (!(from.weight() <= 0 && from.weight() >= 0)) {
    _internal_set_weight(from._internal_weight());
  }
  if (from.granularity() != 0) {
    _internal_set_granularity(from._internal_granularity());
  }
  if (!(from.offset() <= 0 && from.offset() >= 0)) {
    _internal_set_offset(from._internal_offset());
  }
  if (from.adjacency() != 0) {
    _internal_set_adjacency(from._internal_adjacency());
  }
  switch (from.content_case()) {
    case kBuffer: {
      _internal_set_buffer(from._internal_buffer());
      break;
    }
    case kBlob: {
      _internal_mutable_blob()->::jina::NdArrayProto::MergeFrom(from._internal_blob());
      break;
    }
    case kText: {
      _internal_set_text(from._internal_text());
      break;
    }
    case kGraph: {
      _internal_mutable_graph()->::jina::GraphProto::MergeFrom(from._internal_graph());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
}

void DocumentProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.DocumentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DocumentProto::CopyFrom(const DocumentProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.DocumentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DocumentProto::IsInitialized() const {
  return true;
}

void DocumentProto::InternalSwap(DocumentProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  chunks_.InternalSwap(&other->chunks_);
  matches_.InternalSwap(&other->matches_);
  location_.InternalSwap(&other->location_);
  scores_.Swap(&other->scores_);
  evaluations_.Swap(&other->evaluations_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uri_.Swap(&other->uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mime_type_.Swap(&other->mime_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  parent_id_.Swap(&other->parent_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  modality_.Swap(&other->modality_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DocumentProto, adjacency_)
      + sizeof(DocumentProto::adjacency_)
      - PROTOBUF_FIELD_OFFSET(DocumentProto, tags_)>(
          reinterpret_cast<char*>(&tags_),
          reinterpret_cast<char*>(&other->tags_));
  swap(content_, other->content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata DocumentProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RouteProto::InitAsDefaultInstance() {
  ::jina::_RouteProto_default_instance_._instance.get_mutable()->start_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::jina::_RouteProto_default_instance_._instance.get_mutable()->end_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::jina::_RouteProto_default_instance_._instance.get_mutable()->status_ = const_cast< ::jina::StatusProto*>(
      ::jina::StatusProto::internal_default_instance());
}
class RouteProto::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& start_time(const RouteProto* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& end_time(const RouteProto* msg);
  static const ::jina::StatusProto& status(const RouteProto* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
RouteProto::_Internal::start_time(const RouteProto* msg) {
  return *msg->start_time_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
RouteProto::_Internal::end_time(const RouteProto* msg) {
  return *msg->end_time_;
}
const ::jina::StatusProto&
RouteProto::_Internal::status(const RouteProto* msg) {
  return *msg->status_;
}
void RouteProto::clear_start_time() {
  if (GetArena() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
}
void RouteProto::clear_end_time() {
  if (GetArena() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
}
RouteProto::RouteProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.RouteProto)
}
RouteProto::RouteProto(const RouteProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pod_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pod().empty()) {
    pod_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pod(),
      GetArena());
  }
  pod_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pod_id().empty()) {
    pod_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pod_id(),
      GetArena());
  }
  if (from._internal_has_start_time()) {
    start_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.start_time_);
  } else {
    start_time_ = nullptr;
  }
  if (from._internal_has_end_time()) {
    end_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.end_time_);
  } else {
    end_time_ = nullptr;
  }
  if (from._internal_has_status()) {
    status_ = new ::jina::StatusProto(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:jina.RouteProto)
}

void RouteProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RouteProto_jina_2eproto.base);
  pod_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pod_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(status_));
}

RouteProto::~RouteProto() {
  // @@protoc_insertion_point(destructor:jina.RouteProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RouteProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pod_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pod_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
  if (this != internal_default_instance()) delete status_;
}

void RouteProto::ArenaDtor(void* object) {
  RouteProto* _this = reinterpret_cast< RouteProto* >(object);
  (void)_this;
}
void RouteProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RouteProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RouteProto& RouteProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RouteProto_jina_2eproto.base);
  return *internal_default_instance();
}


void RouteProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.RouteProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pod_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pod_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
  if (GetArena() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RouteProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string pod = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pod();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.RouteProto.pod"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pod_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_pod_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.RouteProto.pod_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp start_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp end_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_end_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.StatusProto status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RouteProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.RouteProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod = 1;
  if (this->pod().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pod().data(), static_cast<int>(this->_internal_pod().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.RouteProto.pod");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pod(), target);
  }

  // string pod_id = 2;
  if (this->pod_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pod_id().data(), static_cast<int>(this->_internal_pod_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.RouteProto.pod_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pod_id(), target);
  }

  // .google.protobuf.Timestamp start_time = 3;
  if (this->has_start_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::start_time(this), target, stream);
  }

  // .google.protobuf.Timestamp end_time = 4;
  if (this->has_end_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::end_time(this), target, stream);
  }

  // .jina.StatusProto status = 5;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.RouteProto)
  return target;
}

size_t RouteProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.RouteProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pod = 1;
  if (this->pod().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pod());
  }

  // string pod_id = 2;
  if (this->pod_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pod_id());
  }

  // .google.protobuf.Timestamp start_time = 3;
  if (this->has_start_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Timestamp end_time = 4;
  if (this->has_end_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  // .jina.StatusProto status = 5;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RouteProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.RouteProto)
  GOOGLE_DCHECK_NE(&from, this);
  const RouteProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RouteProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.RouteProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.RouteProto)
    MergeFrom(*source);
  }
}

void RouteProto::MergeFrom(const RouteProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.RouteProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pod().size() > 0) {
    _internal_set_pod(from._internal_pod());
  }
  if (from.pod_id().size() > 0) {
    _internal_set_pod_id(from._internal_pod_id());
  }
  if (from.has_start_time()) {
    _internal_mutable_start_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_start_time());
  }
  if (from.has_end_time()) {
    _internal_mutable_end_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_end_time());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::jina::StatusProto::MergeFrom(from._internal_status());
  }
}

void RouteProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.RouteProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouteProto::CopyFrom(const RouteProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.RouteProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouteProto::IsInitialized() const {
  return true;
}

void RouteProto::InternalSwap(RouteProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pod_.Swap(&other->pod_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pod_id_.Swap(&other->pod_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RouteProto, status_)
      + sizeof(RouteProto::status_)
      - PROTOBUF_FIELD_OFFSET(RouteProto, start_time_)>(
          reinterpret_cast<char*>(&start_time_),
          reinterpret_cast<char*>(&other->start_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RouteProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TargetPodProto::InitAsDefaultInstance() {
}
class TargetPodProto::_Internal {
 public:
};

TargetPodProto::TargetPodProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  out_edges_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.TargetPodProto)
}
TargetPodProto::TargetPodProto(const TargetPodProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      out_edges_(from.out_edges_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host().empty()) {
    host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_host(),
      GetArena());
  }
  target_identity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target_identity().empty()) {
    target_identity_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_target_identity(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_out_) -
    reinterpret_cast<char*>(&port_)) + sizeof(port_out_));
  // @@protoc_insertion_point(copy_constructor:jina.TargetPodProto)
}

void TargetPodProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TargetPodProto_jina_2eproto.base);
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_identity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_out_) -
      reinterpret_cast<char*>(&port_)) + sizeof(port_out_));
}

TargetPodProto::~TargetPodProto() {
  // @@protoc_insertion_point(destructor:jina.TargetPodProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TargetPodProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_identity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TargetPodProto::ArenaDtor(void* object) {
  TargetPodProto* _this = reinterpret_cast< TargetPodProto* >(object);
  (void)_this;
}
void TargetPodProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TargetPodProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TargetPodProto& TargetPodProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TargetPodProto_jina_2eproto.base);
  return *internal_default_instance();
}


void TargetPodProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.TargetPodProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  out_edges_.Clear();
  host_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  target_identity_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_out_) -
      reinterpret_cast<char*>(&port_)) + sizeof(port_out_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TargetPodProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string host = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_host();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.TargetPodProto.host"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 expected_parts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          expected_parts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .jina.RoutingEdgeProto out_edges = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_out_edges(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string target_identity = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_target_identity();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.TargetPodProto.target_identity"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 port_out = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          port_out_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TargetPodProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.TargetPodProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.TargetPodProto.host");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_host(), target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_port(), target);
  }

  // uint32 expected_parts = 3;
  if (this->expected_parts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_expected_parts(), target);
  }

  // repeated .jina.RoutingEdgeProto out_edges = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_out_edges_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_out_edges(i), target, stream);
  }

  // string target_identity = 5;
  if (this->target_identity().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_identity().data(), static_cast<int>(this->_internal_target_identity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.TargetPodProto.target_identity");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_target_identity(), target);
  }

  // uint32 port_out = 6;
  if (this->port_out() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_port_out(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.TargetPodProto)
  return target;
}

size_t TargetPodProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.TargetPodProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .jina.RoutingEdgeProto out_edges = 4;
  total_size += 1UL * this->_internal_out_edges_size();
  for (const auto& msg : this->out_edges_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string host = 1;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  // string target_identity = 5;
  if (this->target_identity().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_identity());
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_port());
  }

  // uint32 expected_parts = 3;
  if (this->expected_parts() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_expected_parts());
  }

  // uint32 port_out = 6;
  if (this->port_out() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_port_out());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetPodProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.TargetPodProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetPodProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TargetPodProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.TargetPodProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.TargetPodProto)
    MergeFrom(*source);
  }
}

void TargetPodProto::MergeFrom(const TargetPodProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.TargetPodProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  out_edges_.MergeFrom(from.out_edges_);
  if (from.host().size() > 0) {
    _internal_set_host(from._internal_host());
  }
  if (from.target_identity().size() > 0) {
    _internal_set_target_identity(from._internal_target_identity());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.expected_parts() != 0) {
    _internal_set_expected_parts(from._internal_expected_parts());
  }
  if (from.port_out() != 0) {
    _internal_set_port_out(from._internal_port_out());
  }
}

void TargetPodProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.TargetPodProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetPodProto::CopyFrom(const TargetPodProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.TargetPodProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetPodProto::IsInitialized() const {
  return true;
}

void TargetPodProto::InternalSwap(TargetPodProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  out_edges_.InternalSwap(&other->out_edges_);
  host_.Swap(&other->host_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  target_identity_.Swap(&other->target_identity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TargetPodProto, port_out_)
      + sizeof(TargetPodProto::port_out_)
      - PROTOBUF_FIELD_OFFSET(TargetPodProto, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TargetPodProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RoutingEdgeProto::InitAsDefaultInstance() {
}
class RoutingEdgeProto::_Internal {
 public:
};

RoutingEdgeProto::RoutingEdgeProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.RoutingEdgeProto)
}
RoutingEdgeProto::RoutingEdgeProto(const RoutingEdgeProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pod_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pod().empty()) {
    pod_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pod(),
      GetArena());
  }
  send_as_bind_ = from.send_as_bind_;
  // @@protoc_insertion_point(copy_constructor:jina.RoutingEdgeProto)
}

void RoutingEdgeProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RoutingEdgeProto_jina_2eproto.base);
  pod_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  send_as_bind_ = false;
}

RoutingEdgeProto::~RoutingEdgeProto() {
  // @@protoc_insertion_point(destructor:jina.RoutingEdgeProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RoutingEdgeProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pod_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RoutingEdgeProto::ArenaDtor(void* object) {
  RoutingEdgeProto* _this = reinterpret_cast< RoutingEdgeProto* >(object);
  (void)_this;
}
void RoutingEdgeProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoutingEdgeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RoutingEdgeProto& RoutingEdgeProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RoutingEdgeProto_jina_2eproto.base);
  return *internal_default_instance();
}


void RoutingEdgeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.RoutingEdgeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pod_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  send_as_bind_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoutingEdgeProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string pod = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pod();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.RoutingEdgeProto.pod"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool send_as_bind = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          send_as_bind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoutingEdgeProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.RoutingEdgeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod = 1;
  if (this->pod().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pod().data(), static_cast<int>(this->_internal_pod().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.RoutingEdgeProto.pod");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pod(), target);
  }

  // bool send_as_bind = 2;
  if (this->send_as_bind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_send_as_bind(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.RoutingEdgeProto)
  return target;
}

size_t RoutingEdgeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.RoutingEdgeProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pod = 1;
  if (this->pod().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pod());
  }

  // bool send_as_bind = 2;
  if (this->send_as_bind() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoutingEdgeProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.RoutingEdgeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const RoutingEdgeProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RoutingEdgeProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.RoutingEdgeProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.RoutingEdgeProto)
    MergeFrom(*source);
  }
}

void RoutingEdgeProto::MergeFrom(const RoutingEdgeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.RoutingEdgeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pod().size() > 0) {
    _internal_set_pod(from._internal_pod());
  }
  if (from.send_as_bind() != 0) {
    _internal_set_send_as_bind(from._internal_send_as_bind());
  }
}

void RoutingEdgeProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.RoutingEdgeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoutingEdgeProto::CopyFrom(const RoutingEdgeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.RoutingEdgeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoutingEdgeProto::IsInitialized() const {
  return true;
}

void RoutingEdgeProto::InternalSwap(RoutingEdgeProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pod_.Swap(&other->pod_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(send_as_bind_, other->send_as_bind_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoutingEdgeProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

RoutingTableProto_PodsEntry_DoNotUse::RoutingTableProto_PodsEntry_DoNotUse() {}
RoutingTableProto_PodsEntry_DoNotUse::RoutingTableProto_PodsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void RoutingTableProto_PodsEntry_DoNotUse::MergeFrom(const RoutingTableProto_PodsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata RoutingTableProto_PodsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void RoutingTableProto_PodsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void RoutingTableProto::InitAsDefaultInstance() {
}
class RoutingTableProto::_Internal {
 public:
};

RoutingTableProto::RoutingTableProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  pods_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.RoutingTableProto)
}
RoutingTableProto::RoutingTableProto(const RoutingTableProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pods_.MergeFrom(from.pods_);
  active_pod_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_active_pod().empty()) {
    active_pod_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_active_pod(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:jina.RoutingTableProto)
}

void RoutingTableProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RoutingTableProto_jina_2eproto.base);
  active_pod_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RoutingTableProto::~RoutingTableProto() {
  // @@protoc_insertion_point(destructor:jina.RoutingTableProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RoutingTableProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  active_pod_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RoutingTableProto::ArenaDtor(void* object) {
  RoutingTableProto* _this = reinterpret_cast< RoutingTableProto* >(object);
  (void)_this;
}
void RoutingTableProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoutingTableProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RoutingTableProto& RoutingTableProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RoutingTableProto_jina_2eproto.base);
  return *internal_default_instance();
}


void RoutingTableProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.RoutingTableProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pods_.Clear();
  active_pod_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoutingTableProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .jina.TargetPodProto> pods = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&pods_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string active_pod = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_active_pod();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.RoutingTableProto.active_pod"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoutingTableProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.RoutingTableProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .jina.TargetPodProto> pods = 1;
  if (!this->_internal_pods().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::TargetPodProto >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "jina.RoutingTableProto.PodsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_pods().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_pods().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::TargetPodProto >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::TargetPodProto >::const_iterator
          it = this->_internal_pods().begin();
          it != this->_internal_pods().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = RoutingTableProto_PodsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::TargetPodProto >::const_iterator
          it = this->_internal_pods().begin();
          it != this->_internal_pods().end(); ++it) {
        target = RoutingTableProto_PodsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string active_pod = 2;
  if (this->active_pod().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_active_pod().data(), static_cast<int>(this->_internal_active_pod().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.RoutingTableProto.active_pod");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_active_pod(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.RoutingTableProto)
  return target;
}

size_t RoutingTableProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.RoutingTableProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .jina.TargetPodProto> pods = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_pods_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::jina::TargetPodProto >::const_iterator
      it = this->_internal_pods().begin();
      it != this->_internal_pods().end(); ++it) {
    total_size += RoutingTableProto_PodsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string active_pod = 2;
  if (this->active_pod().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_active_pod());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoutingTableProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.RoutingTableProto)
  GOOGLE_DCHECK_NE(&from, this);
  const RoutingTableProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RoutingTableProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.RoutingTableProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.RoutingTableProto)
    MergeFrom(*source);
  }
}

void RoutingTableProto::MergeFrom(const RoutingTableProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.RoutingTableProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pods_.MergeFrom(from.pods_);
  if (from.active_pod().size() > 0) {
    _internal_set_active_pod(from._internal_active_pod());
  }
}

void RoutingTableProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.RoutingTableProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoutingTableProto::CopyFrom(const RoutingTableProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.RoutingTableProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoutingTableProto::IsInitialized() const {
  return true;
}

void RoutingTableProto::InternalSwap(RoutingTableProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pods_.Swap(&other->pods_);
  active_pod_.Swap(&other->active_pod_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RoutingTableProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EnvelopeProto_VersionProto::InitAsDefaultInstance() {
}
class EnvelopeProto_VersionProto::_Internal {
 public:
};

EnvelopeProto_VersionProto::EnvelopeProto_VersionProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.EnvelopeProto.VersionProto)
}
EnvelopeProto_VersionProto::EnvelopeProto_VersionProto(const EnvelopeProto_VersionProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  jina_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_jina().empty()) {
    jina_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_jina(),
      GetArena());
  }
  proto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_proto().empty()) {
    proto_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_proto(),
      GetArena());
  }
  vcs_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vcs().empty()) {
    vcs_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_vcs(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:jina.EnvelopeProto.VersionProto)
}

void EnvelopeProto_VersionProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EnvelopeProto_VersionProto_jina_2eproto.base);
  jina_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  proto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vcs_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EnvelopeProto_VersionProto::~EnvelopeProto_VersionProto() {
  // @@protoc_insertion_point(destructor:jina.EnvelopeProto.VersionProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EnvelopeProto_VersionProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  jina_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  proto_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vcs_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EnvelopeProto_VersionProto::ArenaDtor(void* object) {
  EnvelopeProto_VersionProto* _this = reinterpret_cast< EnvelopeProto_VersionProto* >(object);
  (void)_this;
}
void EnvelopeProto_VersionProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnvelopeProto_VersionProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnvelopeProto_VersionProto& EnvelopeProto_VersionProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnvelopeProto_VersionProto_jina_2eproto.base);
  return *internal_default_instance();
}


void EnvelopeProto_VersionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.EnvelopeProto.VersionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jina_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  proto_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  vcs_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnvelopeProto_VersionProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string jina = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_jina();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.EnvelopeProto.VersionProto.jina"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string proto = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_proto();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.EnvelopeProto.VersionProto.proto"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string vcs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_vcs();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.EnvelopeProto.VersionProto.vcs"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnvelopeProto_VersionProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.EnvelopeProto.VersionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string jina = 1;
  if (this->jina().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_jina().data(), static_cast<int>(this->_internal_jina().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.EnvelopeProto.VersionProto.jina");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_jina(), target);
  }

  // string proto = 2;
  if (this->proto().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_proto().data(), static_cast<int>(this->_internal_proto().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.EnvelopeProto.VersionProto.proto");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_proto(), target);
  }

  // string vcs = 3;
  if (this->vcs().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vcs().data(), static_cast<int>(this->_internal_vcs().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.EnvelopeProto.VersionProto.vcs");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_vcs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.EnvelopeProto.VersionProto)
  return target;
}

size_t EnvelopeProto_VersionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.EnvelopeProto.VersionProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string jina = 1;
  if (this->jina().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_jina());
  }

  // string proto = 2;
  if (this->proto().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_proto());
  }

  // string vcs = 3;
  if (this->vcs().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vcs());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnvelopeProto_VersionProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.EnvelopeProto.VersionProto)
  GOOGLE_DCHECK_NE(&from, this);
  const EnvelopeProto_VersionProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnvelopeProto_VersionProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.EnvelopeProto.VersionProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.EnvelopeProto.VersionProto)
    MergeFrom(*source);
  }
}

void EnvelopeProto_VersionProto::MergeFrom(const EnvelopeProto_VersionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.EnvelopeProto.VersionProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.jina().size() > 0) {
    _internal_set_jina(from._internal_jina());
  }
  if (from.proto().size() > 0) {
    _internal_set_proto(from._internal_proto());
  }
  if (from.vcs().size() > 0) {
    _internal_set_vcs(from._internal_vcs());
  }
}

void EnvelopeProto_VersionProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.EnvelopeProto.VersionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnvelopeProto_VersionProto::CopyFrom(const EnvelopeProto_VersionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.EnvelopeProto.VersionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnvelopeProto_VersionProto::IsInitialized() const {
  return true;
}

void EnvelopeProto_VersionProto::InternalSwap(EnvelopeProto_VersionProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  jina_.Swap(&other->jina_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  proto_.Swap(&other->proto_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  vcs_.Swap(&other->vcs_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata EnvelopeProto_VersionProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EnvelopeProto_CompressConfigProto::InitAsDefaultInstance() {
  ::jina::_EnvelopeProto_CompressConfigProto_default_instance_._instance.get_mutable()->parameters_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class EnvelopeProto_CompressConfigProto::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& parameters(const EnvelopeProto_CompressConfigProto* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
EnvelopeProto_CompressConfigProto::_Internal::parameters(const EnvelopeProto_CompressConfigProto* msg) {
  return *msg->parameters_;
}
void EnvelopeProto_CompressConfigProto::clear_parameters() {
  if (GetArena() == nullptr && parameters_ != nullptr) {
    delete parameters_;
  }
  parameters_ = nullptr;
}
EnvelopeProto_CompressConfigProto::EnvelopeProto_CompressConfigProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.EnvelopeProto.CompressConfigProto)
}
EnvelopeProto_CompressConfigProto::EnvelopeProto_CompressConfigProto(const EnvelopeProto_CompressConfigProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_algorithm().empty()) {
    algorithm_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_algorithm(),
      GetArena());
  }
  if (from._internal_has_parameters()) {
    parameters_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.parameters_);
  } else {
    parameters_ = nullptr;
  }
  ::memcpy(&min_bytes_, &from.min_bytes_,
    static_cast<size_t>(reinterpret_cast<char*>(&min_ratio_) -
    reinterpret_cast<char*>(&min_bytes_)) + sizeof(min_ratio_));
  // @@protoc_insertion_point(copy_constructor:jina.EnvelopeProto.CompressConfigProto)
}

void EnvelopeProto_CompressConfigProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EnvelopeProto_CompressConfigProto_jina_2eproto.base);
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&parameters_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_ratio_) -
      reinterpret_cast<char*>(&parameters_)) + sizeof(min_ratio_));
}

EnvelopeProto_CompressConfigProto::~EnvelopeProto_CompressConfigProto() {
  // @@protoc_insertion_point(destructor:jina.EnvelopeProto.CompressConfigProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EnvelopeProto_CompressConfigProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  algorithm_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parameters_;
}

void EnvelopeProto_CompressConfigProto::ArenaDtor(void* object) {
  EnvelopeProto_CompressConfigProto* _this = reinterpret_cast< EnvelopeProto_CompressConfigProto* >(object);
  (void)_this;
}
void EnvelopeProto_CompressConfigProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnvelopeProto_CompressConfigProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnvelopeProto_CompressConfigProto& EnvelopeProto_CompressConfigProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnvelopeProto_CompressConfigProto_jina_2eproto.base);
  return *internal_default_instance();
}


void EnvelopeProto_CompressConfigProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.EnvelopeProto.CompressConfigProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  algorithm_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && parameters_ != nullptr) {
    delete parameters_;
  }
  parameters_ = nullptr;
  ::memset(&min_bytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_ratio_) -
      reinterpret_cast<char*>(&min_bytes_)) + sizeof(min_ratio_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnvelopeProto_CompressConfigProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string algorithm = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_algorithm();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.EnvelopeProto.CompressConfigProto.algorithm"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 min_bytes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          min_bytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float min_ratio = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          min_ratio_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_parameters(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnvelopeProto_CompressConfigProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.EnvelopeProto.CompressConfigProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string algorithm = 1;
  if (this->algorithm().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_algorithm().data(), static_cast<int>(this->_internal_algorithm().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.EnvelopeProto.CompressConfigProto.algorithm");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_algorithm(), target);
  }

  // uint64 min_bytes = 2;
  if (this->min_bytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_min_bytes(), target);
  }

  // float min_ratio = 3;
  if (!(this->min_ratio() <= 0 && this->min_ratio() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_min_ratio(), target);
  }

  // .google.protobuf.Struct parameters = 4;
  if (this->has_parameters()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::parameters(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.EnvelopeProto.CompressConfigProto)
  return target;
}

size_t EnvelopeProto_CompressConfigProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.EnvelopeProto.CompressConfigProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string algorithm = 1;
  if (this->algorithm().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_algorithm());
  }

  // .google.protobuf.Struct parameters = 4;
  if (this->has_parameters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  // uint64 min_bytes = 2;
  if (this->min_bytes() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_min_bytes());
  }

  // float min_ratio = 3;
  if (!(this->min_ratio() <= 0 && this->min_ratio() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnvelopeProto_CompressConfigProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.EnvelopeProto.CompressConfigProto)
  GOOGLE_DCHECK_NE(&from, this);
  const EnvelopeProto_CompressConfigProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnvelopeProto_CompressConfigProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.EnvelopeProto.CompressConfigProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.EnvelopeProto.CompressConfigProto)
    MergeFrom(*source);
  }
}

void EnvelopeProto_CompressConfigProto::MergeFrom(const EnvelopeProto_CompressConfigProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.EnvelopeProto.CompressConfigProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.algorithm().size() > 0) {
    _internal_set_algorithm(from._internal_algorithm());
  }
  if (from.has_parameters()) {
    _internal_mutable_parameters()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_parameters());
  }
  if (from.min_bytes() != 0) {
    _internal_set_min_bytes(from._internal_min_bytes());
  }
  if (!(from.min_ratio() <= 0 && from.min_ratio() >= 0)) {
    _internal_set_min_ratio(from._internal_min_ratio());
  }
}

void EnvelopeProto_CompressConfigProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.EnvelopeProto.CompressConfigProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnvelopeProto_CompressConfigProto::CopyFrom(const EnvelopeProto_CompressConfigProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.EnvelopeProto.CompressConfigProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnvelopeProto_CompressConfigProto::IsInitialized() const {
  return true;
}

void EnvelopeProto_CompressConfigProto::InternalSwap(EnvelopeProto_CompressConfigProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  algorithm_.Swap(&other->algorithm_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnvelopeProto_CompressConfigProto, min_ratio_)
      + sizeof(EnvelopeProto_CompressConfigProto::min_ratio_)
      - PROTOBUF_FIELD_OFFSET(EnvelopeProto_CompressConfigProto, parameters_)>(
          reinterpret_cast<char*>(&parameters_),
          reinterpret_cast<char*>(&other->parameters_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EnvelopeProto_CompressConfigProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EnvelopeProto::InitAsDefaultInstance() {
  ::jina::_EnvelopeProto_default_instance_._instance.get_mutable()->version_ = const_cast< ::jina::EnvelopeProto_VersionProto*>(
      ::jina::EnvelopeProto_VersionProto::internal_default_instance());
  ::jina::_EnvelopeProto_default_instance_._instance.get_mutable()->compression_ = const_cast< ::jina::EnvelopeProto_CompressConfigProto*>(
      ::jina::EnvelopeProto_CompressConfigProto::internal_default_instance());
  ::jina::_EnvelopeProto_default_instance_._instance.get_mutable()->routing_table_ = const_cast< ::jina::RoutingTableProto*>(
      ::jina::RoutingTableProto::internal_default_instance());
  ::jina::_EnvelopeProto_default_instance_._instance.get_mutable()->status_ = const_cast< ::jina::StatusProto*>(
      ::jina::StatusProto::internal_default_instance());
  ::jina::_EnvelopeProto_default_instance_._instance.get_mutable()->header_ = const_cast< ::jina::HeaderProto*>(
      ::jina::HeaderProto::internal_default_instance());
}
class EnvelopeProto::_Internal {
 public:
  static const ::jina::EnvelopeProto_VersionProto& version(const EnvelopeProto* msg);
  static const ::jina::EnvelopeProto_CompressConfigProto& compression(const EnvelopeProto* msg);
  static const ::jina::RoutingTableProto& routing_table(const EnvelopeProto* msg);
  static const ::jina::StatusProto& status(const EnvelopeProto* msg);
  static const ::jina::HeaderProto& header(const EnvelopeProto* msg);
};

const ::jina::EnvelopeProto_VersionProto&
EnvelopeProto::_Internal::version(const EnvelopeProto* msg) {
  return *msg->version_;
}
const ::jina::EnvelopeProto_CompressConfigProto&
EnvelopeProto::_Internal::compression(const EnvelopeProto* msg) {
  return *msg->compression_;
}
const ::jina::RoutingTableProto&
EnvelopeProto::_Internal::routing_table(const EnvelopeProto* msg) {
  return *msg->routing_table_;
}
const ::jina::StatusProto&
EnvelopeProto::_Internal::status(const EnvelopeProto* msg) {
  return *msg->status_;
}
const ::jina::HeaderProto&
EnvelopeProto::_Internal::header(const EnvelopeProto* msg) {
  return *msg->header_;
}
EnvelopeProto::EnvelopeProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  routes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.EnvelopeProto)
}
EnvelopeProto::EnvelopeProto(const EnvelopeProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      routes_(from.routes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sender_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sender_id().empty()) {
    sender_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sender_id(),
      GetArena());
  }
  receiver_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_receiver_id().empty()) {
    receiver_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_receiver_id(),
      GetArena());
  }
  request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_request_id().empty()) {
    request_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_request_id(),
      GetArena());
  }
  request_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_request_type().empty()) {
    request_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_request_type(),
      GetArena());
  }
  if (from._internal_has_version()) {
    version_ = new ::jina::EnvelopeProto_VersionProto(*from.version_);
  } else {
    version_ = nullptr;
  }
  if (from._internal_has_compression()) {
    compression_ = new ::jina::EnvelopeProto_CompressConfigProto(*from.compression_);
  } else {
    compression_ = nullptr;
  }
  if (from._internal_has_status()) {
    status_ = new ::jina::StatusProto(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_header()) {
    header_ = new ::jina::HeaderProto(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_routing_table()) {
    routing_table_ = new ::jina::RoutingTableProto(*from.routing_table_);
  } else {
    routing_table_ = nullptr;
  }
  ::memcpy(&timeout_, &from.timeout_,
    static_cast<size_t>(reinterpret_cast<char*>(&check_version_) -
    reinterpret_cast<char*>(&timeout_)) + sizeof(check_version_));
  // @@protoc_insertion_point(copy_constructor:jina.EnvelopeProto)
}

void EnvelopeProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EnvelopeProto_jina_2eproto.base);
  sender_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  request_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&check_version_) -
      reinterpret_cast<char*>(&version_)) + sizeof(check_version_));
}

EnvelopeProto::~EnvelopeProto() {
  // @@protoc_insertion_point(destructor:jina.EnvelopeProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EnvelopeProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sender_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  request_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete version_;
  if (this != internal_default_instance()) delete compression_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete routing_table_;
}

void EnvelopeProto::ArenaDtor(void* object) {
  EnvelopeProto* _this = reinterpret_cast< EnvelopeProto* >(object);
  (void)_this;
}
void EnvelopeProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnvelopeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnvelopeProto& EnvelopeProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnvelopeProto_jina_2eproto.base);
  return *internal_default_instance();
}


void EnvelopeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.EnvelopeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routes_.Clear();
  sender_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  receiver_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  request_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  request_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && version_ != nullptr) {
    delete version_;
  }
  version_ = nullptr;
  if (GetArena() == nullptr && compression_ != nullptr) {
    delete compression_;
  }
  compression_ = nullptr;
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && routing_table_ != nullptr) {
    delete routing_table_;
  }
  routing_table_ = nullptr;
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&check_version_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(check_version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnvelopeProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string sender_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sender_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.EnvelopeProto.sender_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receiver_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_receiver_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.EnvelopeProto.receiver_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string request_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_request_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.EnvelopeProto.request_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 timeout = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          timeout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.EnvelopeProto.VersionProto version = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_version(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string request_type = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_request_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.EnvelopeProto.request_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool check_version = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          check_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.EnvelopeProto.CompressConfigProto compression = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_compression(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .jina.RouteProto routes = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_routes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // .jina.StatusProto status = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.HeaderProto header = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.RoutingTableProto routing_table = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_routing_table(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnvelopeProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.EnvelopeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender_id = 1;
  if (this->sender_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender_id().data(), static_cast<int>(this->_internal_sender_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.EnvelopeProto.sender_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sender_id(), target);
  }

  // string receiver_id = 2;
  if (this->receiver_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receiver_id().data(), static_cast<int>(this->_internal_receiver_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.EnvelopeProto.receiver_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_receiver_id(), target);
  }

  // string request_id = 3;
  if (this->request_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_id().data(), static_cast<int>(this->_internal_request_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.EnvelopeProto.request_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_request_id(), target);
  }

  // uint32 timeout = 4;
  if (this->timeout() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_timeout(), target);
  }

  // .jina.EnvelopeProto.VersionProto version = 6;
  if (this->has_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::version(this), target, stream);
  }

  // string request_type = 7;
  if (this->request_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_type().data(), static_cast<int>(this->_internal_request_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.EnvelopeProto.request_type");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_request_type(), target);
  }

  // bool check_version = 8;
  if (this->check_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_check_version(), target);
  }

  // .jina.EnvelopeProto.CompressConfigProto compression = 9;
  if (this->has_compression()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::compression(this), target, stream);
  }

  // repeated .jina.RouteProto routes = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_routes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_routes(i), target, stream);
  }

  // .jina.StatusProto status = 11;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::status(this), target, stream);
  }

  // .jina.HeaderProto header = 12;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::header(this), target, stream);
  }

  // .jina.RoutingTableProto routing_table = 13;
  if (this->has_routing_table()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::routing_table(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.EnvelopeProto)
  return target;
}

size_t EnvelopeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.EnvelopeProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .jina.RouteProto routes = 10;
  total_size += 1UL * this->_internal_routes_size();
  for (const auto& msg : this->routes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string sender_id = 1;
  if (this->sender_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender_id());
  }

  // string receiver_id = 2;
  if (this->receiver_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receiver_id());
  }

  // string request_id = 3;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_id());
  }

  // string request_type = 7;
  if (this->request_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_type());
  }

  // .jina.EnvelopeProto.VersionProto version = 6;
  if (this->has_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *version_);
  }

  // .jina.EnvelopeProto.CompressConfigProto compression = 9;
  if (this->has_compression()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compression_);
  }

  // .jina.StatusProto status = 11;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .jina.HeaderProto header = 12;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .jina.RoutingTableProto routing_table = 13;
  if (this->has_routing_table()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *routing_table_);
  }

  // uint32 timeout = 4;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_timeout());
  }

  // bool check_version = 8;
  if (this->check_version() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnvelopeProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.EnvelopeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const EnvelopeProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnvelopeProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.EnvelopeProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.EnvelopeProto)
    MergeFrom(*source);
  }
}

void EnvelopeProto::MergeFrom(const EnvelopeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.EnvelopeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  routes_.MergeFrom(from.routes_);
  if (from.sender_id().size() > 0) {
    _internal_set_sender_id(from._internal_sender_id());
  }
  if (from.receiver_id().size() > 0) {
    _internal_set_receiver_id(from._internal_receiver_id());
  }
  if (from.request_id().size() > 0) {
    _internal_set_request_id(from._internal_request_id());
  }
  if (from.request_type().size() > 0) {
    _internal_set_request_type(from._internal_request_type());
  }
  if (from.has_version()) {
    _internal_mutable_version()->::jina::EnvelopeProto_VersionProto::MergeFrom(from._internal_version());
  }
  if (from.has_compression()) {
    _internal_mutable_compression()->::jina::EnvelopeProto_CompressConfigProto::MergeFrom(from._internal_compression());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::jina::StatusProto::MergeFrom(from._internal_status());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::jina::HeaderProto::MergeFrom(from._internal_header());
  }
  if (from.has_routing_table()) {
    _internal_mutable_routing_table()->::jina::RoutingTableProto::MergeFrom(from._internal_routing_table());
  }
  if (from.timeout() != 0) {
    _internal_set_timeout(from._internal_timeout());
  }
  if (from.check_version() != 0) {
    _internal_set_check_version(from._internal_check_version());
  }
}

void EnvelopeProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.EnvelopeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnvelopeProto::CopyFrom(const EnvelopeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.EnvelopeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnvelopeProto::IsInitialized() const {
  return true;
}

void EnvelopeProto::InternalSwap(EnvelopeProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  routes_.InternalSwap(&other->routes_);
  sender_id_.Swap(&other->sender_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  receiver_id_.Swap(&other->receiver_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  request_id_.Swap(&other->request_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  request_type_.Swap(&other->request_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnvelopeProto, check_version_)
      + sizeof(EnvelopeProto::check_version_)
      - PROTOBUF_FIELD_OFFSET(EnvelopeProto, version_)>(
          reinterpret_cast<char*>(&version_),
          reinterpret_cast<char*>(&other->version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EnvelopeProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HeaderProto::InitAsDefaultInstance() {
}
class HeaderProto::_Internal {
 public:
};

HeaderProto::HeaderProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.HeaderProto)
}
HeaderProto::HeaderProto(const HeaderProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  exec_endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_exec_endpoint().empty()) {
    exec_endpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_exec_endpoint(),
      GetArena());
  }
  target_peapod_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target_peapod().empty()) {
    target_peapod_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_target_peapod(),
      GetArena());
  }
  no_propagate_ = from.no_propagate_;
  // @@protoc_insertion_point(copy_constructor:jina.HeaderProto)
}

void HeaderProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HeaderProto_jina_2eproto.base);
  exec_endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_peapod_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  no_propagate_ = false;
}

HeaderProto::~HeaderProto() {
  // @@protoc_insertion_point(destructor:jina.HeaderProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HeaderProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  exec_endpoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_peapod_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HeaderProto::ArenaDtor(void* object) {
  HeaderProto* _this = reinterpret_cast< HeaderProto* >(object);
  (void)_this;
}
void HeaderProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HeaderProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeaderProto& HeaderProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HeaderProto_jina_2eproto.base);
  return *internal_default_instance();
}


void HeaderProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.HeaderProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exec_endpoint_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  target_peapod_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  no_propagate_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HeaderProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string exec_endpoint = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_exec_endpoint();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.HeaderProto.exec_endpoint"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string target_peapod = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_target_peapod();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.HeaderProto.target_peapod"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool no_propagate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          no_propagate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HeaderProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.HeaderProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string exec_endpoint = 1;
  if (this->exec_endpoint().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_exec_endpoint().data(), static_cast<int>(this->_internal_exec_endpoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.HeaderProto.exec_endpoint");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_exec_endpoint(), target);
  }

  // string target_peapod = 2;
  if (this->target_peapod().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_peapod().data(), static_cast<int>(this->_internal_target_peapod().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.HeaderProto.target_peapod");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_target_peapod(), target);
  }

  // bool no_propagate = 3;
  if (this->no_propagate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_no_propagate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.HeaderProto)
  return target;
}

size_t HeaderProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.HeaderProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string exec_endpoint = 1;
  if (this->exec_endpoint().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_exec_endpoint());
  }

  // string target_peapod = 2;
  if (this->target_peapod().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_peapod());
  }

  // bool no_propagate = 3;
  if (this->no_propagate() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeaderProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.HeaderProto)
  GOOGLE_DCHECK_NE(&from, this);
  const HeaderProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HeaderProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.HeaderProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.HeaderProto)
    MergeFrom(*source);
  }
}

void HeaderProto::MergeFrom(const HeaderProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.HeaderProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.exec_endpoint().size() > 0) {
    _internal_set_exec_endpoint(from._internal_exec_endpoint());
  }
  if (from.target_peapod().size() > 0) {
    _internal_set_target_peapod(from._internal_target_peapod());
  }
  if (from.no_propagate() != 0) {
    _internal_set_no_propagate(from._internal_no_propagate());
  }
}

void HeaderProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.HeaderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeaderProto::CopyFrom(const HeaderProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.HeaderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeaderProto::IsInitialized() const {
  return true;
}

void HeaderProto::InternalSwap(HeaderProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  exec_endpoint_.Swap(&other->exec_endpoint_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  target_peapod_.Swap(&other->target_peapod_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(no_propagate_, other->no_propagate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HeaderProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StatusProto_ExceptionProto::InitAsDefaultInstance() {
}
class StatusProto_ExceptionProto::_Internal {
 public:
};

StatusProto_ExceptionProto::StatusProto_ExceptionProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  args_(arena),
  stacks_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.StatusProto.ExceptionProto)
}
StatusProto_ExceptionProto::StatusProto_ExceptionProto(const StatusProto_ExceptionProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      args_(from.args_),
      stacks_(from.stacks_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  executor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_executor().empty()) {
    executor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_executor(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:jina.StatusProto.ExceptionProto)
}

void StatusProto_ExceptionProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatusProto_ExceptionProto_jina_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  executor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StatusProto_ExceptionProto::~StatusProto_ExceptionProto() {
  // @@protoc_insertion_point(destructor:jina.StatusProto.ExceptionProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatusProto_ExceptionProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  executor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StatusProto_ExceptionProto::ArenaDtor(void* object) {
  StatusProto_ExceptionProto* _this = reinterpret_cast< StatusProto_ExceptionProto* >(object);
  (void)_this;
}
void StatusProto_ExceptionProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatusProto_ExceptionProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusProto_ExceptionProto& StatusProto_ExceptionProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatusProto_ExceptionProto_jina_2eproto.base);
  return *internal_default_instance();
}


void StatusProto_ExceptionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.StatusProto.ExceptionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  stacks_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  executor_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatusProto_ExceptionProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.StatusProto.ExceptionProto.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string args = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_args();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.StatusProto.ExceptionProto.args"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string stacks = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_stacks();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.StatusProto.ExceptionProto.stacks"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string executor = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_executor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.StatusProto.ExceptionProto.executor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatusProto_ExceptionProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.StatusProto.ExceptionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.StatusProto.ExceptionProto.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated string args = 2;
  for (int i = 0, n = this->_internal_args_size(); i < n; i++) {
    const auto& s = this->_internal_args(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.StatusProto.ExceptionProto.args");
    target = stream->WriteString(2, s, target);
  }

  // repeated string stacks = 3;
  for (int i = 0, n = this->_internal_stacks_size(); i < n; i++) {
    const auto& s = this->_internal_stacks(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.StatusProto.ExceptionProto.stacks");
    target = stream->WriteString(3, s, target);
  }

  // string executor = 4;
  if (this->executor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_executor().data(), static_cast<int>(this->_internal_executor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.StatusProto.ExceptionProto.executor");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_executor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.StatusProto.ExceptionProto)
  return target;
}

size_t StatusProto_ExceptionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.StatusProto.ExceptionProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string args = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(args_.size());
  for (int i = 0, n = args_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      args_.Get(i));
  }

  // repeated string stacks = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(stacks_.size());
  for (int i = 0, n = stacks_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      stacks_.Get(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string executor = 4;
  if (this->executor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_executor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusProto_ExceptionProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.StatusProto.ExceptionProto)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusProto_ExceptionProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatusProto_ExceptionProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.StatusProto.ExceptionProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.StatusProto.ExceptionProto)
    MergeFrom(*source);
  }
}

void StatusProto_ExceptionProto::MergeFrom(const StatusProto_ExceptionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.StatusProto.ExceptionProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  stacks_.MergeFrom(from.stacks_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.executor().size() > 0) {
    _internal_set_executor(from._internal_executor());
  }
}

void StatusProto_ExceptionProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.StatusProto.ExceptionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusProto_ExceptionProto::CopyFrom(const StatusProto_ExceptionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.StatusProto.ExceptionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusProto_ExceptionProto::IsInitialized() const {
  return true;
}

void StatusProto_ExceptionProto::InternalSwap(StatusProto_ExceptionProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  args_.InternalSwap(&other->args_);
  stacks_.InternalSwap(&other->stacks_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  executor_.Swap(&other->executor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StatusProto_ExceptionProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StatusProto::InitAsDefaultInstance() {
  ::jina::_StatusProto_default_instance_._instance.get_mutable()->exception_ = const_cast< ::jina::StatusProto_ExceptionProto*>(
      ::jina::StatusProto_ExceptionProto::internal_default_instance());
}
class StatusProto::_Internal {
 public:
  static const ::jina::StatusProto_ExceptionProto& exception(const StatusProto* msg);
};

const ::jina::StatusProto_ExceptionProto&
StatusProto::_Internal::exception(const StatusProto* msg) {
  return *msg->exception_;
}
StatusProto::StatusProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.StatusProto)
}
StatusProto::StatusProto(const StatusProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  if (from._internal_has_exception()) {
    exception_ = new ::jina::StatusProto_ExceptionProto(*from.exception_);
  } else {
    exception_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:jina.StatusProto)
}

void StatusProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatusProto_jina_2eproto.base);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&exception_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&exception_)) + sizeof(code_));
}

StatusProto::~StatusProto() {
  // @@protoc_insertion_point(destructor:jina.StatusProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatusProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete exception_;
}

void StatusProto::ArenaDtor(void* object) {
  StatusProto* _this = reinterpret_cast< StatusProto* >(object);
  (void)_this;
}
void StatusProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatusProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusProto& StatusProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatusProto_jina_2eproto.base);
  return *internal_default_instance();
}


void StatusProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.StatusProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatusProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .jina.StatusProto.StatusCode code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_code(static_cast<::jina::StatusProto_StatusCode>(val));
        } else goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.StatusProto.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.StatusProto.ExceptionProto exception = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_exception(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatusProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.StatusProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jina.StatusProto.StatusCode code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_code(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.StatusProto.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // .jina.StatusProto.ExceptionProto exception = 3;
  if (this->has_exception()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::exception(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.StatusProto)
  return target;
}

size_t StatusProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.StatusProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .jina.StatusProto.ExceptionProto exception = 3;
  if (this->has_exception()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  // .jina.StatusProto.StatusCode code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.StatusProto)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatusProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.StatusProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.StatusProto)
    MergeFrom(*source);
  }
}

void StatusProto::MergeFrom(const StatusProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.StatusProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.has_exception()) {
    _internal_mutable_exception()->::jina::StatusProto_ExceptionProto::MergeFrom(from._internal_exception());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void StatusProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.StatusProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusProto::CopyFrom(const StatusProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.StatusProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusProto::IsInitialized() const {
  return true;
}

void StatusProto::InternalSwap(StatusProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatusProto, code_)
      + sizeof(StatusProto::code_)
      - PROTOBUF_FIELD_OFFSET(StatusProto, exception_)>(
          reinterpret_cast<char*>(&exception_),
          reinterpret_cast<char*>(&other->exception_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StatusProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MessageProto::InitAsDefaultInstance() {
  ::jina::_MessageProto_default_instance_._instance.get_mutable()->envelope_ = const_cast< ::jina::EnvelopeProto*>(
      ::jina::EnvelopeProto::internal_default_instance());
  ::jina::_MessageProto_default_instance_._instance.get_mutable()->request_ = const_cast< ::jina::RequestProto*>(
      ::jina::RequestProto::internal_default_instance());
}
class MessageProto::_Internal {
 public:
  static const ::jina::EnvelopeProto& envelope(const MessageProto* msg);
  static const ::jina::RequestProto& request(const MessageProto* msg);
};

const ::jina::EnvelopeProto&
MessageProto::_Internal::envelope(const MessageProto* msg) {
  return *msg->envelope_;
}
const ::jina::RequestProto&
MessageProto::_Internal::request(const MessageProto* msg) {
  return *msg->request_;
}
MessageProto::MessageProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.MessageProto)
}
MessageProto::MessageProto(const MessageProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_envelope()) {
    envelope_ = new ::jina::EnvelopeProto(*from.envelope_);
  } else {
    envelope_ = nullptr;
  }
  if (from._internal_has_request()) {
    request_ = new ::jina::RequestProto(*from.request_);
  } else {
    request_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:jina.MessageProto)
}

void MessageProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessageProto_jina_2eproto.base);
  ::memset(&envelope_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&request_) -
      reinterpret_cast<char*>(&envelope_)) + sizeof(request_));
}

MessageProto::~MessageProto() {
  // @@protoc_insertion_point(destructor:jina.MessageProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MessageProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete envelope_;
  if (this != internal_default_instance()) delete request_;
}

void MessageProto::ArenaDtor(void* object) {
  MessageProto* _this = reinterpret_cast< MessageProto* >(object);
  (void)_this;
}
void MessageProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MessageProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageProto& MessageProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageProto_jina_2eproto.base);
  return *internal_default_instance();
}


void MessageProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.MessageProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && envelope_ != nullptr) {
    delete envelope_;
  }
  envelope_ = nullptr;
  if (GetArena() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .jina.EnvelopeProto envelope = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_envelope(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.RequestProto request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.MessageProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jina.EnvelopeProto envelope = 1;
  if (this->has_envelope()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::envelope(this), target, stream);
  }

  // .jina.RequestProto request = 2;
  if (this->has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::request(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.MessageProto)
  return target;
}

size_t MessageProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.MessageProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .jina.EnvelopeProto envelope = 1;
  if (this->has_envelope()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *envelope_);
  }

  // .jina.RequestProto request = 2;
  if (this->has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.MessageProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.MessageProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.MessageProto)
    MergeFrom(*source);
  }
}

void MessageProto::MergeFrom(const MessageProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.MessageProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_envelope()) {
    _internal_mutable_envelope()->::jina::EnvelopeProto::MergeFrom(from._internal_envelope());
  }
  if (from.has_request()) {
    _internal_mutable_request()->::jina::RequestProto::MergeFrom(from._internal_request());
  }
}

void MessageProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.MessageProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageProto::CopyFrom(const MessageProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.MessageProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageProto::IsInitialized() const {
  return true;
}

void MessageProto::InternalSwap(MessageProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageProto, request_)
      + sizeof(MessageProto::request_)
      - PROTOBUF_FIELD_OFFSET(MessageProto, envelope_)>(
          reinterpret_cast<char*>(&envelope_),
          reinterpret_cast<char*>(&other->envelope_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DocumentArrayProto::InitAsDefaultInstance() {
}
class DocumentArrayProto::_Internal {
 public:
};

DocumentArrayProto::DocumentArrayProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  docs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.DocumentArrayProto)
}
DocumentArrayProto::DocumentArrayProto(const DocumentArrayProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      docs_(from.docs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:jina.DocumentArrayProto)
}

void DocumentArrayProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DocumentArrayProto_jina_2eproto.base);
}

DocumentArrayProto::~DocumentArrayProto() {
  // @@protoc_insertion_point(destructor:jina.DocumentArrayProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DocumentArrayProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DocumentArrayProto::ArenaDtor(void* object) {
  DocumentArrayProto* _this = reinterpret_cast< DocumentArrayProto* >(object);
  (void)_this;
}
void DocumentArrayProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DocumentArrayProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DocumentArrayProto& DocumentArrayProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DocumentArrayProto_jina_2eproto.base);
  return *internal_default_instance();
}


void DocumentArrayProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.DocumentArrayProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  docs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DocumentArrayProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .jina.DocumentProto docs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_docs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DocumentArrayProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.DocumentArrayProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .jina.DocumentProto docs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_docs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_docs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.DocumentArrayProto)
  return target;
}

size_t DocumentArrayProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.DocumentArrayProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .jina.DocumentProto docs = 1;
  total_size += 1UL * this->_internal_docs_size();
  for (const auto& msg : this->docs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DocumentArrayProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.DocumentArrayProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DocumentArrayProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DocumentArrayProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.DocumentArrayProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.DocumentArrayProto)
    MergeFrom(*source);
  }
}

void DocumentArrayProto::MergeFrom(const DocumentArrayProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.DocumentArrayProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  docs_.MergeFrom(from.docs_);
}

void DocumentArrayProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.DocumentArrayProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DocumentArrayProto::CopyFrom(const DocumentArrayProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.DocumentArrayProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DocumentArrayProto::IsInitialized() const {
  return true;
}

void DocumentArrayProto::InternalSwap(DocumentArrayProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  docs_.InternalSwap(&other->docs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DocumentArrayProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestProto_DataRequestProto::InitAsDefaultInstance() {
}
class RequestProto_DataRequestProto::_Internal {
 public:
};

RequestProto_DataRequestProto::RequestProto_DataRequestProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  docs_(arena),
  groundtruths_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.RequestProto.DataRequestProto)
}
RequestProto_DataRequestProto::RequestProto_DataRequestProto(const RequestProto_DataRequestProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      docs_(from.docs_),
      groundtruths_(from.groundtruths_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:jina.RequestProto.DataRequestProto)
}

void RequestProto_DataRequestProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestProto_DataRequestProto_jina_2eproto.base);
}

RequestProto_DataRequestProto::~RequestProto_DataRequestProto() {
  // @@protoc_insertion_point(destructor:jina.RequestProto.DataRequestProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RequestProto_DataRequestProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RequestProto_DataRequestProto::ArenaDtor(void* object) {
  RequestProto_DataRequestProto* _this = reinterpret_cast< RequestProto_DataRequestProto* >(object);
  (void)_this;
}
void RequestProto_DataRequestProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestProto_DataRequestProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestProto_DataRequestProto& RequestProto_DataRequestProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestProto_DataRequestProto_jina_2eproto.base);
  return *internal_default_instance();
}


void RequestProto_DataRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.RequestProto.DataRequestProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  docs_.Clear();
  groundtruths_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestProto_DataRequestProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .jina.DocumentProto docs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_docs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .jina.DocumentProto groundtruths = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_groundtruths(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestProto_DataRequestProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.RequestProto.DataRequestProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .jina.DocumentProto docs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_docs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_docs(i), target, stream);
  }

  // repeated .jina.DocumentProto groundtruths = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_groundtruths_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_groundtruths(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.RequestProto.DataRequestProto)
  return target;
}

size_t RequestProto_DataRequestProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.RequestProto.DataRequestProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .jina.DocumentProto docs = 1;
  total_size += 1UL * this->_internal_docs_size();
  for (const auto& msg : this->docs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .jina.DocumentProto groundtruths = 2;
  total_size += 1UL * this->_internal_groundtruths_size();
  for (const auto& msg : this->groundtruths_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestProto_DataRequestProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.RequestProto.DataRequestProto)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestProto_DataRequestProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestProto_DataRequestProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.RequestProto.DataRequestProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.RequestProto.DataRequestProto)
    MergeFrom(*source);
  }
}

void RequestProto_DataRequestProto::MergeFrom(const RequestProto_DataRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.RequestProto.DataRequestProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  docs_.MergeFrom(from.docs_);
  groundtruths_.MergeFrom(from.groundtruths_);
}

void RequestProto_DataRequestProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.RequestProto.DataRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestProto_DataRequestProto::CopyFrom(const RequestProto_DataRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.RequestProto.DataRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestProto_DataRequestProto::IsInitialized() const {
  return true;
}

void RequestProto_DataRequestProto::InternalSwap(RequestProto_DataRequestProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  docs_.InternalSwap(&other->docs_);
  groundtruths_.InternalSwap(&other->groundtruths_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestProto_DataRequestProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestProto_ControlRequestProto::InitAsDefaultInstance() {
}
class RequestProto_ControlRequestProto::_Internal {
 public:
};

RequestProto_ControlRequestProto::RequestProto_ControlRequestProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.RequestProto.ControlRequestProto)
}
RequestProto_ControlRequestProto::RequestProto_ControlRequestProto(const RequestProto_ControlRequestProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_ = from.command_;
  // @@protoc_insertion_point(copy_constructor:jina.RequestProto.ControlRequestProto)
}

void RequestProto_ControlRequestProto::SharedCtor() {
  command_ = 0;
}

RequestProto_ControlRequestProto::~RequestProto_ControlRequestProto() {
  // @@protoc_insertion_point(destructor:jina.RequestProto.ControlRequestProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RequestProto_ControlRequestProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RequestProto_ControlRequestProto::ArenaDtor(void* object) {
  RequestProto_ControlRequestProto* _this = reinterpret_cast< RequestProto_ControlRequestProto* >(object);
  (void)_this;
}
void RequestProto_ControlRequestProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestProto_ControlRequestProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestProto_ControlRequestProto& RequestProto_ControlRequestProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestProto_ControlRequestProto_jina_2eproto.base);
  return *internal_default_instance();
}


void RequestProto_ControlRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.RequestProto.ControlRequestProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestProto_ControlRequestProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .jina.RequestProto.ControlRequestProto.Command command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_command(static_cast<::jina::RequestProto_ControlRequestProto_Command>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestProto_ControlRequestProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.RequestProto.ControlRequestProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jina.RequestProto.ControlRequestProto.Command command = 1;
  if (this->command() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_command(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.RequestProto.ControlRequestProto)
  return target;
}

size_t RequestProto_ControlRequestProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.RequestProto.ControlRequestProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .jina.RequestProto.ControlRequestProto.Command command = 1;
  if (this->command() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_command());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestProto_ControlRequestProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.RequestProto.ControlRequestProto)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestProto_ControlRequestProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestProto_ControlRequestProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.RequestProto.ControlRequestProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.RequestProto.ControlRequestProto)
    MergeFrom(*source);
  }
}

void RequestProto_ControlRequestProto::MergeFrom(const RequestProto_ControlRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.RequestProto.ControlRequestProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command() != 0) {
    _internal_set_command(from._internal_command());
  }
}

void RequestProto_ControlRequestProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.RequestProto.ControlRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestProto_ControlRequestProto::CopyFrom(const RequestProto_ControlRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.RequestProto.ControlRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestProto_ControlRequestProto::IsInitialized() const {
  return true;
}

void RequestProto_ControlRequestProto::InternalSwap(RequestProto_ControlRequestProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(command_, other->command_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestProto_ControlRequestProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestProto::InitAsDefaultInstance() {
  ::jina::_RequestProto_default_instance_.control_ = const_cast< ::jina::RequestProto_ControlRequestProto*>(
      ::jina::RequestProto_ControlRequestProto::internal_default_instance());
  ::jina::_RequestProto_default_instance_.data_ = const_cast< ::jina::RequestProto_DataRequestProto*>(
      ::jina::RequestProto_DataRequestProto::internal_default_instance());
  ::jina::_RequestProto_default_instance_._instance.get_mutable()->header_ = const_cast< ::jina::HeaderProto*>(
      ::jina::HeaderProto::internal_default_instance());
  ::jina::_RequestProto_default_instance_._instance.get_mutable()->parameters_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::jina::_RequestProto_default_instance_._instance.get_mutable()->status_ = const_cast< ::jina::StatusProto*>(
      ::jina::StatusProto::internal_default_instance());
}
class RequestProto::_Internal {
 public:
  static const ::jina::RequestProto_ControlRequestProto& control(const RequestProto* msg);
  static const ::jina::RequestProto_DataRequestProto& data(const RequestProto* msg);
  static const ::jina::HeaderProto& header(const RequestProto* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& parameters(const RequestProto* msg);
  static const ::jina::StatusProto& status(const RequestProto* msg);
};

const ::jina::RequestProto_ControlRequestProto&
RequestProto::_Internal::control(const RequestProto* msg) {
  return *msg->body_.control_;
}
const ::jina::RequestProto_DataRequestProto&
RequestProto::_Internal::data(const RequestProto* msg) {
  return *msg->body_.data_;
}
const ::jina::HeaderProto&
RequestProto::_Internal::header(const RequestProto* msg) {
  return *msg->header_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
RequestProto::_Internal::parameters(const RequestProto* msg) {
  return *msg->parameters_;
}
const ::jina::StatusProto&
RequestProto::_Internal::status(const RequestProto* msg) {
  return *msg->status_;
}
void RequestProto::set_allocated_control(::jina::RequestProto_ControlRequestProto* control) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_body();
  if (control) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(control);
    if (message_arena != submessage_arena) {
      control = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, control, submessage_arena);
    }
    set_has_control();
    body_.control_ = control;
  }
  // @@protoc_insertion_point(field_set_allocated:jina.RequestProto.control)
}
void RequestProto::set_allocated_data(::jina::RequestProto_DataRequestProto* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_body();
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(data);
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    set_has_data();
    body_.data_ = data;
  }
  // @@protoc_insertion_point(field_set_allocated:jina.RequestProto.data)
}
void RequestProto::clear_parameters() {
  if (GetArena() == nullptr && parameters_ != nullptr) {
    delete parameters_;
  }
  parameters_ = nullptr;
}
RequestProto::RequestProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  routes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jina.RequestProto)
}
RequestProto::RequestProto(const RequestProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      routes_(from.routes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_request_id().empty()) {
    request_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_request_id(),
      GetArena());
  }
  if (from._internal_has_header()) {
    header_ = new ::jina::HeaderProto(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_parameters()) {
    parameters_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.parameters_);
  } else {
    parameters_ = nullptr;
  }
  if (from._internal_has_status()) {
    status_ = new ::jina::StatusProto(*from.status_);
  } else {
    status_ = nullptr;
  }
  clear_has_body();
  switch (from.body_case()) {
    case kControl: {
      _internal_mutable_control()->::jina::RequestProto_ControlRequestProto::MergeFrom(from._internal_control());
      break;
    }
    case kData: {
      _internal_mutable_data()->::jina::RequestProto_DataRequestProto::MergeFrom(from._internal_data());
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:jina.RequestProto)
}

void RequestProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestProto_jina_2eproto.base);
  request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(status_));
  clear_has_body();
}

RequestProto::~RequestProto() {
  // @@protoc_insertion_point(destructor:jina.RequestProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RequestProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  request_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete parameters_;
  if (this != internal_default_instance()) delete status_;
  if (has_body()) {
    clear_body();
  }
}

void RequestProto::ArenaDtor(void* object) {
  RequestProto* _this = reinterpret_cast< RequestProto* >(object);
  (void)_this;
}
void RequestProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestProto& RequestProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestProto_jina_2eproto.base);
  return *internal_default_instance();
}


void RequestProto::clear_body() {
// @@protoc_insertion_point(one_of_clear_start:jina.RequestProto)
  switch (body_case()) {
    case kControl: {
      if (GetArena() == nullptr) {
        delete body_.control_;
      }
      break;
    }
    case kData: {
      if (GetArena() == nullptr) {
        delete body_.data_;
      }
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BODY_NOT_SET;
}


void RequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:jina.RequestProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routes_.Clear();
  request_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && parameters_ != nullptr) {
    delete parameters_;
  }
  parameters_ = nullptr;
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  clear_body();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_request_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "jina.RequestProto.request_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.RequestProto.ControlRequestProto control = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_control(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.RequestProto.DataRequestProto data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .jina.HeaderProto header = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct parameters = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_parameters(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .jina.RouteProto routes = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_routes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // .jina.StatusProto status = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jina.RequestProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_id().data(), static_cast<int>(this->_internal_request_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "jina.RequestProto.request_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_id(), target);
  }

  // .jina.RequestProto.ControlRequestProto control = 2;
  if (_internal_has_control()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::control(this), target, stream);
  }

  // .jina.RequestProto.DataRequestProto data = 3;
  if (_internal_has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::data(this), target, stream);
  }

  // .jina.HeaderProto header = 4;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::header(this), target, stream);
  }

  // .google.protobuf.Struct parameters = 5;
  if (this->has_parameters()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::parameters(this), target, stream);
  }

  // repeated .jina.RouteProto routes = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_routes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_routes(i), target, stream);
  }

  // .jina.StatusProto status = 7;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jina.RequestProto)
  return target;
}

size_t RequestProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jina.RequestProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .jina.RouteProto routes = 6;
  total_size += 1UL * this->_internal_routes_size();
  for (const auto& msg : this->routes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_id());
  }

  // .jina.HeaderProto header = 4;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .google.protobuf.Struct parameters = 5;
  if (this->has_parameters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  // .jina.StatusProto status = 7;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  switch (body_case()) {
    // .jina.RequestProto.ControlRequestProto control = 2;
    case kControl: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *body_.control_);
      break;
    }
    // .jina.RequestProto.DataRequestProto data = 3;
    case kData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *body_.data_);
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jina.RequestProto)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jina.RequestProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jina.RequestProto)
    MergeFrom(*source);
  }
}

void RequestProto::MergeFrom(const RequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jina.RequestProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  routes_.MergeFrom(from.routes_);
  if (from.request_id().size() > 0) {
    _internal_set_request_id(from._internal_request_id());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::jina::HeaderProto::MergeFrom(from._internal_header());
  }
  if (from.has_parameters()) {
    _internal_mutable_parameters()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_parameters());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::jina::StatusProto::MergeFrom(from._internal_status());
  }
  switch (from.body_case()) {
    case kControl: {
      _internal_mutable_control()->::jina::RequestProto_ControlRequestProto::MergeFrom(from._internal_control());
      break;
    }
    case kData: {
      _internal_mutable_data()->::jina::RequestProto_DataRequestProto::MergeFrom(from._internal_data());
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
}

void RequestProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jina.RequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestProto::CopyFrom(const RequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jina.RequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestProto::IsInitialized() const {
  return true;
}

void RequestProto::InternalSwap(RequestProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  routes_.InternalSwap(&other->routes_);
  request_id_.Swap(&other->request_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestProto, status_)
      + sizeof(RequestProto::status_)
      - PROTOBUF_FIELD_OFFSET(RequestProto, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
  swap(body_, other->body_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace jina
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::jina::DenseNdArrayProto* Arena::CreateMaybeMessage< ::jina::DenseNdArrayProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::DenseNdArrayProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::NdArrayProto* Arena::CreateMaybeMessage< ::jina::NdArrayProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::NdArrayProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::SparseNdArrayProto* Arena::CreateMaybeMessage< ::jina::SparseNdArrayProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::SparseNdArrayProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::NamedScoreProto* Arena::CreateMaybeMessage< ::jina::NamedScoreProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::NamedScoreProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::GraphProto* Arena::CreateMaybeMessage< ::jina::GraphProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::GraphProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::DocumentProto_ScoresEntry_DoNotUse* Arena::CreateMaybeMessage< ::jina::DocumentProto_ScoresEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::DocumentProto_ScoresEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::DocumentProto_EvaluationsEntry_DoNotUse* Arena::CreateMaybeMessage< ::jina::DocumentProto_EvaluationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::DocumentProto_EvaluationsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::DocumentProto* Arena::CreateMaybeMessage< ::jina::DocumentProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::DocumentProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::RouteProto* Arena::CreateMaybeMessage< ::jina::RouteProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::RouteProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::TargetPodProto* Arena::CreateMaybeMessage< ::jina::TargetPodProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::TargetPodProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::RoutingEdgeProto* Arena::CreateMaybeMessage< ::jina::RoutingEdgeProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::RoutingEdgeProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::RoutingTableProto_PodsEntry_DoNotUse* Arena::CreateMaybeMessage< ::jina::RoutingTableProto_PodsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::RoutingTableProto_PodsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::RoutingTableProto* Arena::CreateMaybeMessage< ::jina::RoutingTableProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::RoutingTableProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::EnvelopeProto_VersionProto* Arena::CreateMaybeMessage< ::jina::EnvelopeProto_VersionProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::EnvelopeProto_VersionProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::EnvelopeProto_CompressConfigProto* Arena::CreateMaybeMessage< ::jina::EnvelopeProto_CompressConfigProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::EnvelopeProto_CompressConfigProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::EnvelopeProto* Arena::CreateMaybeMessage< ::jina::EnvelopeProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::EnvelopeProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::HeaderProto* Arena::CreateMaybeMessage< ::jina::HeaderProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::HeaderProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::StatusProto_ExceptionProto* Arena::CreateMaybeMessage< ::jina::StatusProto_ExceptionProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::StatusProto_ExceptionProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::StatusProto* Arena::CreateMaybeMessage< ::jina::StatusProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::StatusProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::MessageProto* Arena::CreateMaybeMessage< ::jina::MessageProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::MessageProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::DocumentArrayProto* Arena::CreateMaybeMessage< ::jina::DocumentArrayProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::DocumentArrayProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::RequestProto_DataRequestProto* Arena::CreateMaybeMessage< ::jina::RequestProto_DataRequestProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::RequestProto_DataRequestProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::RequestProto_ControlRequestProto* Arena::CreateMaybeMessage< ::jina::RequestProto_ControlRequestProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::RequestProto_ControlRequestProto >(arena);
}
template<> PROTOBUF_NOINLINE ::jina::RequestProto* Arena::CreateMaybeMessage< ::jina::RequestProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jina::RequestProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
